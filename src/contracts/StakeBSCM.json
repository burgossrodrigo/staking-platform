{
    "contractName": "StakeBSCM",
    "abi": [
      {
        "inputs": [
          {
            "internalType": "contract IERC20",
            "name": "bscmemepadContractAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "staker",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "stakedAt",
            "type": "uint256"
          }
        ],
        "name": "Stake",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "unStaker",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "unStakedAt",
            "type": "uint256"
          }
        ],
        "name": "UnStake",
        "type": "event"
      },
      {
        "stateMutability": "payable",
        "type": "fallback",
        "payable": true
      },
      {
        "inputs": [],
        "name": "BSCMemepadContract",
        "outputs": [
          {
            "internalType": "contract IERC20",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "stakerInfo",
        "outputs": [
          {
            "internalType": "bool",
            "name": "isPresent",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "stakedAt",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "stakers",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [],
        "name": "totalBSCMemepadStaked",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "stateMutability": "payable",
        "type": "receive",
        "payable": true
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "stake",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "unStake",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "myStakes",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "stakedBSCMemepad",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "daysStakedFor",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      },
      {
        "inputs": [],
        "name": "totalStakers",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "constant": true
      }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"bscmemepadContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAt\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unStaker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unStakedAt\",\"type\":\"uint256\"}],\"name\":\"UnStake\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"BSCMemepadContract\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedBSCMemepad\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daysStakedFor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isPresent\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stakedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBSCMemepadStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"myStakes()\":{\"details\":\"Returns the caller's staking details\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"details\":\"To stake BSCMemepad in the contract Requirements: - amount must be greater than 0 - BSCMemepad balance of Staker must be greater than or equal to amount\"},\"totalStakers()\":{\"details\":\"Returns the total number of stakers\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unStake(uint256)\":{\"details\":\"To unstake BSCMemepad from the contract Requirements: - Caller's staked BSCMemepad must be greater than 0 - Unstake amount must be less than or equal to the staked BSCMemepad - Contract's BSCMemepad balance must be greater than staked BSCMemepad\"}},\"title\":\"StakeBSCM\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"The stake BSCM contract for staking and unstaking BSCM\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/StakeBSCM.sol\":\"StakeBSCM\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x671741933530f343f023a40e58e61bc09d62494b96c6f3e39e647f315facd519\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4082ea29d4cab3998038c2c5e37ed990e009a6d8814bbe82931173db7b6e63d5\",\"dweb:/ipfs/QmaAwSn8ubftkwEYP3iU14f8VP7texzjWDXbopEEvm8LQF\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"project:/contracts/StakeBSCM.sol\":{\"keccak256\":\"0x9b03572075fcf49bb3e35f4103a430913e279d924b65f7a3504dd0e932f207bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ab601e08b013adec776485a1747694cf3d374cd48360e6f660f03fb0e6e870f\",\"dweb:/ipfs/QmeYouf5j8G4qrefA9eSq9cJVqZar8gjb5AL1Z7rCcawVf\"]}},\"version\":1}",
    "bytecode": "0x60806040523480156200001157600080fd5b50604051620020283803806200202883398181016040528101906200003791906200025c565b620000576200004b6200011260201b60201c565b6200011a60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000ca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000c190620002ef565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000311565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021082620001e3565b9050919050565b6000620002248262000203565b9050919050565b620002368162000217565b81146200024257600080fd5b50565b60008151905062000256816200022b565b92915050565b600060208284031215620002755762000274620001de565b5b6000620002858482850162000245565b91505092915050565b600082825260208201905092915050565b7f43616e6e6f742062652061646472657373207a65726f00000000000000000000600082015250565b6000620002d76016836200028e565b9150620002e4826200029f565b602082019050919050565b600060208201905081810360008301526200030a81620002c8565b9050919050565b611d0780620003216000396000f3fe6080604052600436106100a05760003560e01c80638da5cb5b116100645780638da5cb5b1461017f578063a3a46c6a146101aa578063a694fc3a146101d5578063f2fde38b146101fe578063f899d5f914610227578063fd5e6dd114610252576100a7565b80634e745f1f146100a95780635d3eea91146100e8578063715018a61461011157806371bb3d01146101285780638698903814610154576100a7565b366100a757005b005b3480156100b557600080fd5b506100d060048036038101906100cb91906111fd565b61028f565b6040516100df9392919061125e565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a91906112c1565b6102c6565b005b34801561011d57600080fd5b506101266106ab565b005b34801561013457600080fd5b5061013d610733565b60405161014b9291906112ee565b60405180910390f35b34801561016057600080fd5b506101696107e5565b6040516101769190611317565b60405180910390f35b34801561018b57600080fd5b506101946107f2565b6040516101a19190611341565b60405180910390f35b3480156101b657600080fd5b506101bf61081b565b6040516101cc91906113bb565b60405180910390f35b3480156101e157600080fd5b506101fc60048036038101906101f791906112c1565b610841565b005b34801561020a57600080fd5b50610225600480360381019061022091906111fd565b610bf2565b005b34801561023357600080fd5b5061023c610cea565b6040516102499190611317565b60405180910390f35b34801561025e57600080fd5b50610279600480360381019061027491906112c1565b610cf0565b6040516102869190611341565b60405180910390f35b60046020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154905083565b60008111610309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030090611433565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff1615151515815260200160018201548152602001600282015481525050905060006103958260200151610d2f565b905060078110156103db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d2906114c5565b60405180910390fd5b6000826040015111610422576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041990611531565b60405180910390fd5b8160400151831115610469576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104609061159d565b60405180910390fd5b82600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104c59190611341565b602060405180830381865afa1580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050691906115d2565b1015610547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053e90611671565b60405180910390fd5b828260400181815161055991906116c0565b915081815250506000826040015114156105795760008260200181815250505b826003600082825461058b91906116c0565b9250508190555081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160010155604082015181600201559050506106563384600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d529092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f54a9763035584fc4fcad1bc4e0e7a83f93e016f50ae32bd527530a77257393ee844260405161069e9291906112ee565b60405180910390a2505050565b6106b3610dd8565b73ffffffffffffffffffffffffffffffffffffffff166106d16107f2565b73ffffffffffffffffffffffffffffffffffffffff1614610727576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071e90611740565b60405180910390fd5b6107316000610de0565b565b6000806000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815250509050806040015192506000816020015111156107db576107d48160200151610d2f565b91506107e0565b600091505b509091565b6000600280549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111610884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087b906117ac565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108e19190611341565b602060405180830381865afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092291906115d2565b905081811015610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095e90611818565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016001820154815260200160028201548152505090508060000151610a6c5760018160000190151590811515815250506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160200181815250505b80600001518015610a81575060008160200151145b8015610a91575060008160400151145b15610aa157428160200181815250505b610af0333085600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ea4909392919063ffffffff16565b8260036000828254610b029190611838565b925050819055508281604001818151610b1b9190611838565b9150818152505080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160010155604082015181600201559050503373ffffffffffffffffffffffffffffffffffffffff167f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b6848360200151604051610be59291906112ee565b60405180910390a2505050565b610bfa610dd8565b73ffffffffffffffffffffffffffffffffffffffff16610c186107f2565b73ffffffffffffffffffffffffffffffffffffffff1614610c6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6590611740565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd590611900565b60405180910390fd5b610ce781610de0565b50565b60035481565b60028181548110610d0057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000620151808242610d4191906116c0565b610d4b919061194f565b9050919050565b610dd38363a9059cbb60e01b8484604051602401610d71929190611980565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f2d565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f27846323b872dd60e01b858585604051602401610ec5939291906119a9565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f2d565b50505050565b6000610f8f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ff49092919063ffffffff16565b9050600081511115610fef5780806020019051810190610faf9190611a0c565b610fee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe590611aab565b60405180910390fd5b5b505050565b6060611003848460008561100c565b90509392505050565b606082471015611051576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104890611b3d565b60405180910390fd5b61105a85611120565b611099576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109090611ba9565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516110c29190611c43565b60006040518083038185875af1925050503d80600081146110ff576040519150601f19603f3d011682016040523d82523d6000602084013e611104565b606091505b5091509150611114828286611133565b92505050949350505050565b600080823b905060008111915050919050565b6060831561114357829050611193565b6000835111156111565782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118a9190611caf565b60405180910390fd5b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111ca8261119f565b9050919050565b6111da816111bf565b81146111e557600080fd5b50565b6000813590506111f7816111d1565b92915050565b6000602082840312156112135761121261119a565b5b6000611221848285016111e8565b91505092915050565b60008115159050919050565b61123f8161122a565b82525050565b6000819050919050565b61125881611245565b82525050565b60006060820190506112736000830186611236565b611280602083018561124f565b61128d604083018461124f565b949350505050565b61129e81611245565b81146112a957600080fd5b50565b6000813590506112bb81611295565b92915050565b6000602082840312156112d7576112d661119a565b5b60006112e5848285016112ac565b91505092915050565b6000604082019050611303600083018561124f565b611310602083018461124f565b9392505050565b600060208201905061132c600083018461124f565b92915050565b61133b816111bf565b82525050565b60006020820190506113566000830184611332565b92915050565b6000819050919050565b600061138161137c6113778461119f565b61135c565b61119f565b9050919050565b600061139382611366565b9050919050565b60006113a582611388565b9050919050565b6113b58161139a565b82525050565b60006020820190506113d060008301846113ac565b92915050565b600082825260208201905092915050565b7f556e5374616b6520616d6f756e74206d757374206265203e2030000000000000600082015250565b600061141d601a836113d6565b9150611428826113e7565b602082019050919050565b6000602082019050818103600083015261144c81611410565b9050919050565b7f43616e6e6f7420756e7374616b6520696e20636f6f6c646f776e20706572696f60008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006114af6021836113d6565b91506114ba82611453565b604082019050919050565b600060208201905081810360008301526114de816114a2565b9050919050565b7f4e6f205374616b65730000000000000000000000000000000000000000000000600082015250565b600061151b6009836113d6565b9150611526826114e5565b602082019050919050565b6000602082019050818103600083015261154a8161150e565b9050919050565b7f556e7374616b6520616d74203e207374616b656420616d740000000000000000600082015250565b60006115876018836113d6565b915061159282611551565b602082019050919050565b600060208201905081810360008301526115b68161157a565b9050919050565b6000815190506115cc81611295565b92915050565b6000602082840312156115e8576115e761119a565b5b60006115f6848285016115bd565b91505092915050565b7f436f6e74726163742062616c616e6365203c207374616b6564204253434d656d60008201527f6570616400000000000000000000000000000000000000000000000000000000602082015250565b600061165b6024836113d6565b9150611666826115ff565b604082019050919050565b6000602082019050818103600083015261168a8161164e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116cb82611245565b91506116d683611245565b9250828210156116e9576116e8611691565b5b828203905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061172a6020836113d6565b9150611735826116f4565b602082019050919050565b600060208201905081810360008301526117598161171d565b9050919050565b7f5374616b6520616d6f756e74206d757374206265203e20300000000000000000600082015250565b60006117966018836113d6565b91506117a182611760565b602082019050919050565b600060208201905081810360008301526117c581611789565b9050919050565b7f43616c6c65722062616c616e6365203c20616d6f756e74000000000000000000600082015250565b60006118026017836113d6565b915061180d826117cc565b602082019050919050565b60006020820190508181036000830152611831816117f5565b9050919050565b600061184382611245565b915061184e83611245565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561188357611882611691565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118ea6026836113d6565b91506118f58261188e565b604082019050919050565b60006020820190508181036000830152611919816118dd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061195a82611245565b915061196583611245565b92508261197557611974611920565b5b828204905092915050565b60006040820190506119956000830185611332565b6119a2602083018461124f565b9392505050565b60006060820190506119be6000830186611332565b6119cb6020830185611332565b6119d8604083018461124f565b949350505050565b6119e98161122a565b81146119f457600080fd5b50565b600081519050611a06816119e0565b92915050565b600060208284031215611a2257611a2161119a565b5b6000611a30848285016119f7565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611a95602a836113d6565b9150611aa082611a39565b604082019050919050565b60006020820190508181036000830152611ac481611a88565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611b276026836113d6565b9150611b3282611acb565b604082019050919050565b60006020820190508181036000830152611b5681611b1a565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611b93601d836113d6565b9150611b9e82611b5d565b602082019050919050565b60006020820190508181036000830152611bc281611b86565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611bfd578082015181840152602081019050611be2565b83811115611c0c576000848401525b50505050565b6000611c1d82611bc9565b611c278185611bd4565b9350611c37818560208601611bdf565b80840191505092915050565b6000611c4f8284611c12565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611c8182611c5a565b611c8b81856113d6565b9350611c9b818560208601611bdf565b611ca481611c65565b840191505092915050565b60006020820190508181036000830152611cc98184611c76565b90509291505056fea26469706673582212204c70e7f2298ab87036068842348369e002140cf66f248982e7b649397cdbeb7164736f6c634300080a0033",
    "deployedBytecode": "0x6080604052600436106100a05760003560e01c80638da5cb5b116100645780638da5cb5b1461017f578063a3a46c6a146101aa578063a694fc3a146101d5578063f2fde38b146101fe578063f899d5f914610227578063fd5e6dd114610252576100a7565b80634e745f1f146100a95780635d3eea91146100e8578063715018a61461011157806371bb3d01146101285780638698903814610154576100a7565b366100a757005b005b3480156100b557600080fd5b506100d060048036038101906100cb91906111fd565b61028f565b6040516100df9392919061125e565b60405180910390f35b3480156100f457600080fd5b5061010f600480360381019061010a91906112c1565b6102c6565b005b34801561011d57600080fd5b506101266106ab565b005b34801561013457600080fd5b5061013d610733565b60405161014b9291906112ee565b60405180910390f35b34801561016057600080fd5b506101696107e5565b6040516101769190611317565b60405180910390f35b34801561018b57600080fd5b506101946107f2565b6040516101a19190611341565b60405180910390f35b3480156101b657600080fd5b506101bf61081b565b6040516101cc91906113bb565b60405180910390f35b3480156101e157600080fd5b506101fc60048036038101906101f791906112c1565b610841565b005b34801561020a57600080fd5b50610225600480360381019061022091906111fd565b610bf2565b005b34801561023357600080fd5b5061023c610cea565b6040516102499190611317565b60405180910390f35b34801561025e57600080fd5b50610279600480360381019061027491906112c1565b610cf0565b6040516102869190611341565b60405180910390f35b60046020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154905083565b60008111610309576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030090611433565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff1615151515815260200160018201548152602001600282015481525050905060006103958260200151610d2f565b905060078110156103db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d2906114c5565b60405180910390fd5b6000826040015111610422576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041990611531565b60405180910390fd5b8160400151831115610469576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104609061159d565b60405180910390fd5b82600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104c59190611341565b602060405180830381865afa1580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050691906115d2565b1015610547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053e90611671565b60405180910390fd5b828260400181815161055991906116c0565b915081815250506000826040015114156105795760008260200181815250505b826003600082825461058b91906116c0565b9250508190555081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160010155604082015181600201559050506106563384600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610d529092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f54a9763035584fc4fcad1bc4e0e7a83f93e016f50ae32bd527530a77257393ee844260405161069e9291906112ee565b60405180910390a2505050565b6106b3610dd8565b73ffffffffffffffffffffffffffffffffffffffff166106d16107f2565b73ffffffffffffffffffffffffffffffffffffffff1614610727576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071e90611740565b60405180910390fd5b6107316000610de0565b565b6000806000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815250509050806040015192506000816020015111156107db576107d48160200151610d2f565b91506107e0565b600091505b509091565b6000600280549050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111610884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087b906117ac565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108e19190611341565b602060405180830381865afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092291906115d2565b905081811015610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095e90611818565b60405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016001820154815260200160028201548152505090508060000151610a6c5760018160000190151590811515815250506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550428160200181815250505b80600001518015610a81575060008160200151145b8015610a91575060008160400151145b15610aa157428160200181815250505b610af0333085600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610ea4909392919063ffffffff16565b8260036000828254610b029190611838565b925050819055508281604001818151610b1b9190611838565b9150818152505080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160010155604082015181600201559050503373ffffffffffffffffffffffffffffffffffffffff167f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b6848360200151604051610be59291906112ee565b60405180910390a2505050565b610bfa610dd8565b73ffffffffffffffffffffffffffffffffffffffff16610c186107f2565b73ffffffffffffffffffffffffffffffffffffffff1614610c6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6590611740565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd590611900565b60405180910390fd5b610ce781610de0565b50565b60035481565b60028181548110610d0057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000620151808242610d4191906116c0565b610d4b919061194f565b9050919050565b610dd38363a9059cbb60e01b8484604051602401610d71929190611980565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f2d565b505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f27846323b872dd60e01b858585604051602401610ec5939291906119a9565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f2d565b50505050565b6000610f8f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ff49092919063ffffffff16565b9050600081511115610fef5780806020019051810190610faf9190611a0c565b610fee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe590611aab565b60405180910390fd5b5b505050565b6060611003848460008561100c565b90509392505050565b606082471015611051576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104890611b3d565b60405180910390fd5b61105a85611120565b611099576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109090611ba9565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516110c29190611c43565b60006040518083038185875af1925050503d80600081146110ff576040519150601f19603f3d011682016040523d82523d6000602084013e611104565b606091505b5091509150611114828286611133565b92505050949350505050565b600080823b905060008111915050919050565b6060831561114357829050611193565b6000835111156111565782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118a9190611caf565b60405180910390fd5b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111ca8261119f565b9050919050565b6111da816111bf565b81146111e557600080fd5b50565b6000813590506111f7816111d1565b92915050565b6000602082840312156112135761121261119a565b5b6000611221848285016111e8565b91505092915050565b60008115159050919050565b61123f8161122a565b82525050565b6000819050919050565b61125881611245565b82525050565b60006060820190506112736000830186611236565b611280602083018561124f565b61128d604083018461124f565b949350505050565b61129e81611245565b81146112a957600080fd5b50565b6000813590506112bb81611295565b92915050565b6000602082840312156112d7576112d661119a565b5b60006112e5848285016112ac565b91505092915050565b6000604082019050611303600083018561124f565b611310602083018461124f565b9392505050565b600060208201905061132c600083018461124f565b92915050565b61133b816111bf565b82525050565b60006020820190506113566000830184611332565b92915050565b6000819050919050565b600061138161137c6113778461119f565b61135c565b61119f565b9050919050565b600061139382611366565b9050919050565b60006113a582611388565b9050919050565b6113b58161139a565b82525050565b60006020820190506113d060008301846113ac565b92915050565b600082825260208201905092915050565b7f556e5374616b6520616d6f756e74206d757374206265203e2030000000000000600082015250565b600061141d601a836113d6565b9150611428826113e7565b602082019050919050565b6000602082019050818103600083015261144c81611410565b9050919050565b7f43616e6e6f7420756e7374616b6520696e20636f6f6c646f776e20706572696f60008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006114af6021836113d6565b91506114ba82611453565b604082019050919050565b600060208201905081810360008301526114de816114a2565b9050919050565b7f4e6f205374616b65730000000000000000000000000000000000000000000000600082015250565b600061151b6009836113d6565b9150611526826114e5565b602082019050919050565b6000602082019050818103600083015261154a8161150e565b9050919050565b7f556e7374616b6520616d74203e207374616b656420616d740000000000000000600082015250565b60006115876018836113d6565b915061159282611551565b602082019050919050565b600060208201905081810360008301526115b68161157a565b9050919050565b6000815190506115cc81611295565b92915050565b6000602082840312156115e8576115e761119a565b5b60006115f6848285016115bd565b91505092915050565b7f436f6e74726163742062616c616e6365203c207374616b6564204253434d656d60008201527f6570616400000000000000000000000000000000000000000000000000000000602082015250565b600061165b6024836113d6565b9150611666826115ff565b604082019050919050565b6000602082019050818103600083015261168a8161164e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116cb82611245565b91506116d683611245565b9250828210156116e9576116e8611691565b5b828203905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061172a6020836113d6565b9150611735826116f4565b602082019050919050565b600060208201905081810360008301526117598161171d565b9050919050565b7f5374616b6520616d6f756e74206d757374206265203e20300000000000000000600082015250565b60006117966018836113d6565b91506117a182611760565b602082019050919050565b600060208201905081810360008301526117c581611789565b9050919050565b7f43616c6c65722062616c616e6365203c20616d6f756e74000000000000000000600082015250565b60006118026017836113d6565b915061180d826117cc565b602082019050919050565b60006020820190508181036000830152611831816117f5565b9050919050565b600061184382611245565b915061184e83611245565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561188357611882611691565b5b828201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118ea6026836113d6565b91506118f58261188e565b604082019050919050565b60006020820190508181036000830152611919816118dd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061195a82611245565b915061196583611245565b92508261197557611974611920565b5b828204905092915050565b60006040820190506119956000830185611332565b6119a2602083018461124f565b9392505050565b60006060820190506119be6000830186611332565b6119cb6020830185611332565b6119d8604083018461124f565b949350505050565b6119e98161122a565b81146119f457600080fd5b50565b600081519050611a06816119e0565b92915050565b600060208284031215611a2257611a2161119a565b5b6000611a30848285016119f7565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611a95602a836113d6565b9150611aa082611a39565b604082019050919050565b60006020820190508181036000830152611ac481611a88565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611b276026836113d6565b9150611b3282611acb565b604082019050919050565b60006020820190508181036000830152611b5681611b1a565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611b93601d836113d6565b9150611b9e82611b5d565b602082019050919050565b60006020820190508181036000830152611bc281611b86565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611bfd578082015181840152602081019050611be2565b83811115611c0c576000848401525b50505050565b6000611c1d82611bc9565b611c278185611bd4565b9350611c37818560208601611bdf565b80840191505092915050565b6000611c4f8284611c12565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611c8182611c5a565b611c8b81856113d6565b9350611c9b818560208601611bdf565b611ca481611c65565b840191505092915050565b60006020820190508181036000830152611cc98184611c76565b90509291505056fea26469706673582212204c70e7f2298ab87036068842348369e002140cf66f248982e7b649397cdbeb7164736f6c634300080a0033",
    "immutableReferences": {},
    "generatedSources": [
      {
        "ast": {
          "nodeType": "YulBlock",
          "src": "0:2549:7",
          "statements": [
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "47:35:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "57:19:7",
                    "value": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "73:2:7",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "67:5:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "67:9:7"
                    },
                    "variableNames": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "57:6:7"
                      }
                    ]
                  }
                ]
              },
              "name": "allocate_unbounded",
              "nodeType": "YulFunctionDefinition",
              "returnVariables": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "40:6:7",
                  "type": ""
                }
              ],
              "src": "7:75:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "177:28:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "194:1:7",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "197:1:7",
                          "type": "",
                          "value": "0"
                        }
                      ],
                      "functionName": {
                        "name": "revert",
                        "nodeType": "YulIdentifier",
                        "src": "187:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "187:12:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "187:12:7"
                  }
                ]
              },
              "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
              "nodeType": "YulFunctionDefinition",
              "src": "88:117:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "300:28:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "317:1:7",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "320:1:7",
                          "type": "",
                          "value": "0"
                        }
                      ],
                      "functionName": {
                        "name": "revert",
                        "nodeType": "YulIdentifier",
                        "src": "310:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "310:12:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "310:12:7"
                  }
                ]
              },
              "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
              "nodeType": "YulFunctionDefinition",
              "src": "211:117:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "379:81:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "389:65:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "404:5:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "411:42:7",
                          "type": "",
                          "value": "0xffffffffffffffffffffffffffffffffffffffff"
                        }
                      ],
                      "functionName": {
                        "name": "and",
                        "nodeType": "YulIdentifier",
                        "src": "400:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "400:54:7"
                    },
                    "variableNames": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulIdentifier",
                        "src": "389:7:7"
                      }
                    ]
                  }
                ]
              },
              "name": "cleanup_t_uint160",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "361:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "cleaned",
                  "nodeType": "YulTypedName",
                  "src": "371:7:7",
                  "type": ""
                }
              ],
              "src": "334:126:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "511:51:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "521:35:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "550:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulIdentifier",
                        "src": "532:17:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "532:24:7"
                    },
                    "variableNames": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulIdentifier",
                        "src": "521:7:7"
                      }
                    ]
                  }
                ]
              },
              "name": "cleanup_t_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "493:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "cleaned",
                  "nodeType": "YulTypedName",
                  "src": "503:7:7",
                  "type": ""
                }
              ],
              "src": "466:96:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "627:51:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "637:35:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "666:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "cleanup_t_address",
                        "nodeType": "YulIdentifier",
                        "src": "648:17:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "648:24:7"
                    },
                    "variableNames": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulIdentifier",
                        "src": "637:7:7"
                      }
                    ]
                  }
                ]
              },
              "name": "cleanup_t_contract$_IERC20_$182",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "609:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "cleaned",
                  "nodeType": "YulTypedName",
                  "src": "619:7:7",
                  "type": ""
                }
              ],
              "src": "568:110:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "741:93:7",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "812:16:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "821:1:7",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "824:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "814:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "814:12:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "814:12:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "764:5:7"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "803:5:7"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_contract$_IERC20_$182",
                                "nodeType": "YulIdentifier",
                                "src": "771:31:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "771:38:7"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "761:2:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "761:49:7"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "754:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "754:57:7"
                    },
                    "nodeType": "YulIf",
                    "src": "751:77:7"
                  }
                ]
              },
              "name": "validator_revert_t_contract$_IERC20_$182",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "734:5:7",
                  "type": ""
                }
              ],
              "src": "684:150:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "917:94:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "927:22:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "942:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "936:5:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "936:13:7"
                    },
                    "variableNames": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "927:5:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "999:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "validator_revert_t_contract$_IERC20_$182",
                        "nodeType": "YulIdentifier",
                        "src": "958:40:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "958:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "958:47:7"
                  }
                ]
              },
              "name": "abi_decode_t_contract$_IERC20_$182_fromMemory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "offset",
                  "nodeType": "YulTypedName",
                  "src": "895:6:7",
                  "type": ""
                },
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "903:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "911:5:7",
                  "type": ""
                }
              ],
              "src": "840:171:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1108:288:7",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1154:83:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                              "nodeType": "YulIdentifier",
                              "src": "1156:77:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1156:79:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1156:79:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "1129:7:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1138:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "1125:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1125:23:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1150:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "1121:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1121:32:7"
                    },
                    "nodeType": "YulIf",
                    "src": "1118:119:7"
                  },
                  {
                    "nodeType": "YulBlock",
                    "src": "1247:142:7",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1262:15:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1276:1:7",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1266:6:7",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1291:88:7",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1351:9:7"
                                },
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "1362:6:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1347:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1347:22:7"
                            },
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "1371:7:7"
                            }
                          ],
                          "functionName": {
                            "name": "abi_decode_t_contract$_IERC20_$182_fromMemory",
                            "nodeType": "YulIdentifier",
                            "src": "1301:45:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1301:78:7"
                        },
                        "variableNames": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1291:6:7"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_contract$_IERC20_$182_fromMemory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "1078:9:7",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "1089:7:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "1101:6:7",
                  "type": ""
                }
              ],
              "src": "1017:379:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1498:73:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "1515:3:7"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "1520:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "1508:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1508:19:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1508:19:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "1536:29:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "1555:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1560:4:7",
                          "type": "",
                          "value": "0x20"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "1551:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1551:14:7"
                    },
                    "variableNames": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulIdentifier",
                        "src": "1536:11:7"
                      }
                    ]
                  }
                ]
              },
              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "1470:3:7",
                  "type": ""
                },
                {
                  "name": "length",
                  "nodeType": "YulTypedName",
                  "src": "1475:6:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "updated_pos",
                  "nodeType": "YulTypedName",
                  "src": "1486:11:7",
                  "type": ""
                }
              ],
              "src": "1402:169:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1683:66:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "1705:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1713:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1701:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1701:14:7"
                        },
                        {
                          "hexValue": "43616e6e6f742062652061646472657373207a65726f",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "1717:24:7",
                          "type": "",
                          "value": "Cannot be address zero"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "1694:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1694:48:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1694:48:7"
                  }
                ]
              },
              "name": "store_literal_in_memory_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "1675:6:7",
                  "type": ""
                }
              ],
              "src": "1577:172:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1901:220:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "1911:74:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "1977:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1982:2:7",
                          "type": "",
                          "value": "22"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "1918:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1918:67:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1911:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "2083:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "store_literal_in_memory_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5",
                        "nodeType": "YulIdentifier",
                        "src": "1994:88:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1994:93:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1994:93:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "2096:19:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "2107:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2112:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "2103:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2103:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2096:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_stringliteral_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "1889:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "1897:3:7",
                  "type": ""
                }
              ],
              "src": "1755:366:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2298:248:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "2308:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "2320:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2331:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "2316:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2316:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2308:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2355:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2366:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2351:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2351:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2374:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2380:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2370:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2370:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "2344:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2344:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2344:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "2400:139:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2534:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_stringliteral_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "2408:124:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2408:131:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2400:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "2278:9:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "2293:4:7",
                  "type": ""
                }
              ],
              "src": "2127:419:7"
            }
          ]
        },
        "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$182(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$182(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$182(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$182_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$182(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$182_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$182_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot be address zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
        "id": 7,
        "language": "Yul",
        "name": "#utility.yul"
      }
    ],
    "deployedGeneratedSources": [
      {
        "ast": {
          "nodeType": "YulBlock",
          "src": "0:21722:7",
          "statements": [
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "47:35:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "57:19:7",
                    "value": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "73:2:7",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "67:5:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "67:9:7"
                    },
                    "variableNames": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "57:6:7"
                      }
                    ]
                  }
                ]
              },
              "name": "allocate_unbounded",
              "nodeType": "YulFunctionDefinition",
              "returnVariables": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "40:6:7",
                  "type": ""
                }
              ],
              "src": "7:75:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "177:28:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "194:1:7",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "197:1:7",
                          "type": "",
                          "value": "0"
                        }
                      ],
                      "functionName": {
                        "name": "revert",
                        "nodeType": "YulIdentifier",
                        "src": "187:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "187:12:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "187:12:7"
                  }
                ]
              },
              "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
              "nodeType": "YulFunctionDefinition",
              "src": "88:117:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "300:28:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "317:1:7",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "320:1:7",
                          "type": "",
                          "value": "0"
                        }
                      ],
                      "functionName": {
                        "name": "revert",
                        "nodeType": "YulIdentifier",
                        "src": "310:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "310:12:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "310:12:7"
                  }
                ]
              },
              "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
              "nodeType": "YulFunctionDefinition",
              "src": "211:117:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "379:81:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "389:65:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "404:5:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "411:42:7",
                          "type": "",
                          "value": "0xffffffffffffffffffffffffffffffffffffffff"
                        }
                      ],
                      "functionName": {
                        "name": "and",
                        "nodeType": "YulIdentifier",
                        "src": "400:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "400:54:7"
                    },
                    "variableNames": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulIdentifier",
                        "src": "389:7:7"
                      }
                    ]
                  }
                ]
              },
              "name": "cleanup_t_uint160",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "361:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "cleaned",
                  "nodeType": "YulTypedName",
                  "src": "371:7:7",
                  "type": ""
                }
              ],
              "src": "334:126:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "511:51:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "521:35:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "550:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulIdentifier",
                        "src": "532:17:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "532:24:7"
                    },
                    "variableNames": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulIdentifier",
                        "src": "521:7:7"
                      }
                    ]
                  }
                ]
              },
              "name": "cleanup_t_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "493:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "cleaned",
                  "nodeType": "YulTypedName",
                  "src": "503:7:7",
                  "type": ""
                }
              ],
              "src": "466:96:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "611:79:7",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "668:16:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "677:1:7",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "680:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "670:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "670:12:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "670:12:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "634:5:7"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "659:5:7"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "641:17:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "641:24:7"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "631:2:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "631:35:7"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "624:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "624:43:7"
                    },
                    "nodeType": "YulIf",
                    "src": "621:63:7"
                  }
                ]
              },
              "name": "validator_revert_t_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "604:5:7",
                  "type": ""
                }
              ],
              "src": "568:122:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "748:87:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "758:29:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "780:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "calldataload",
                        "nodeType": "YulIdentifier",
                        "src": "767:12:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "767:20:7"
                    },
                    "variableNames": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "758:5:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "823:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "validator_revert_t_address",
                        "nodeType": "YulIdentifier",
                        "src": "796:26:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "796:33:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "796:33:7"
                  }
                ]
              },
              "name": "abi_decode_t_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "offset",
                  "nodeType": "YulTypedName",
                  "src": "726:6:7",
                  "type": ""
                },
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "734:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "742:5:7",
                  "type": ""
                }
              ],
              "src": "696:139:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "907:263:7",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "953:83:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                              "nodeType": "YulIdentifier",
                              "src": "955:77:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "955:79:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "955:79:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "928:7:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "937:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "924:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "924:23:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "949:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "920:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "920:32:7"
                    },
                    "nodeType": "YulIf",
                    "src": "917:119:7"
                  },
                  {
                    "nodeType": "YulBlock",
                    "src": "1046:117:7",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1061:15:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1075:1:7",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1065:6:7",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1090:63:7",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "1125:9:7"
                                },
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "1136:6:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1121:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1121:22:7"
                            },
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "1145:7:7"
                            }
                          ],
                          "functionName": {
                            "name": "abi_decode_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "1100:20:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1100:53:7"
                        },
                        "variableNames": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1090:6:7"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "877:9:7",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "888:7:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "900:6:7",
                  "type": ""
                }
              ],
              "src": "841:329:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1218:48:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "1228:32:7",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1253:5:7"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "1246:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1246:13:7"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "1239:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1239:21:7"
                    },
                    "variableNames": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulIdentifier",
                        "src": "1228:7:7"
                      }
                    ]
                  }
                ]
              },
              "name": "cleanup_t_bool",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "1200:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "cleaned",
                  "nodeType": "YulTypedName",
                  "src": "1210:7:7",
                  "type": ""
                }
              ],
              "src": "1176:90:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1331:50:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "1348:3:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1368:5:7"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_bool",
                            "nodeType": "YulIdentifier",
                            "src": "1353:14:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1353:21:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "1341:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1341:34:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1341:34:7"
                  }
                ]
              },
              "name": "abi_encode_t_bool_to_t_bool_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "1319:5:7",
                  "type": ""
                },
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "1326:3:7",
                  "type": ""
                }
              ],
              "src": "1272:109:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1432:32:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "1442:16:7",
                    "value": {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1453:5:7"
                    },
                    "variableNames": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulIdentifier",
                        "src": "1442:7:7"
                      }
                    ]
                  }
                ]
              },
              "name": "cleanup_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "1414:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "cleaned",
                  "nodeType": "YulTypedName",
                  "src": "1424:7:7",
                  "type": ""
                }
              ],
              "src": "1387:77:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1535:53:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "1552:3:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1575:5:7"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "1557:17:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1557:24:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "1545:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1545:37:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1545:37:7"
                  }
                ]
              },
              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "1523:5:7",
                  "type": ""
                },
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "1530:3:7",
                  "type": ""
                }
              ],
              "src": "1470:118:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "1742:282:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "1752:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "1764:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1775:2:7",
                          "type": "",
                          "value": "96"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "1760:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1760:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1752:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1826:6:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1839:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1850:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1835:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1835:17:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "1788:37:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1788:65:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1788:65:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1907:6:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "1920:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1931:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1916:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1916:18:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "1863:43:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1863:72:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1863:72:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1989:6:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2002:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2013:2:7",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1998:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1998:18:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "1945:43:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "1945:72:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "1945:72:7"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "1698:9:7",
                  "type": ""
                },
                {
                  "name": "value2",
                  "nodeType": "YulTypedName",
                  "src": "1710:6:7",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "1718:6:7",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "1726:6:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "1737:4:7",
                  "type": ""
                }
              ],
              "src": "1594:430:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2073:79:7",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2130:16:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2139:1:7",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2142:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "2132:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2132:12:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2132:12:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "2096:5:7"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2121:5:7"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint256",
                                "nodeType": "YulIdentifier",
                                "src": "2103:17:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2103:24:7"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "2093:2:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2093:35:7"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "2086:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2086:43:7"
                    },
                    "nodeType": "YulIf",
                    "src": "2083:63:7"
                  }
                ]
              },
              "name": "validator_revert_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "2066:5:7",
                  "type": ""
                }
              ],
              "src": "2030:122:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2210:87:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "2220:29:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "2242:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "calldataload",
                        "nodeType": "YulIdentifier",
                        "src": "2229:12:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2229:20:7"
                    },
                    "variableNames": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2220:5:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "2285:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulIdentifier",
                        "src": "2258:26:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2258:33:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2258:33:7"
                  }
                ]
              },
              "name": "abi_decode_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "offset",
                  "nodeType": "YulTypedName",
                  "src": "2188:6:7",
                  "type": ""
                },
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "2196:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "2204:5:7",
                  "type": ""
                }
              ],
              "src": "2158:139:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2369:263:7",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2415:83:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                              "nodeType": "YulIdentifier",
                              "src": "2417:77:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2417:79:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2417:79:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "2390:7:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2399:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "2386:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2386:23:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2411:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "2382:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2382:32:7"
                    },
                    "nodeType": "YulIf",
                    "src": "2379:119:7"
                  },
                  {
                    "nodeType": "YulBlock",
                    "src": "2508:117:7",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2523:15:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2537:1:7",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2527:6:7",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2552:63:7",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "2587:9:7"
                                },
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "2598:6:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2583:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2583:22:7"
                            },
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "2607:7:7"
                            }
                          ],
                          "functionName": {
                            "name": "abi_decode_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "2562:20:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2562:53:7"
                        },
                        "variableNames": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2552:6:7"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "2339:9:7",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "2350:7:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "2362:6:7",
                  "type": ""
                }
              ],
              "src": "2303:329:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "2764:206:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "2774:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "2786:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2797:2:7",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "2782:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2782:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2774:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2854:6:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2867:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2878:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2863:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2863:17:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "2810:43:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2810:71:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2810:71:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2935:6:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "2948:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2959:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2944:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2944:18:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "2891:43:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "2891:72:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "2891:72:7"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "2728:9:7",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "2740:6:7",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "2748:6:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "2759:4:7",
                  "type": ""
                }
              ],
              "src": "2638:332:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3074:124:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "3084:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "3096:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3107:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "3092:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3092:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3084:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3164:6:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3177:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3188:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3173:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3173:17:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "3120:43:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3120:71:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3120:71:7"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "3046:9:7",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "3058:6:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "3069:4:7",
                  "type": ""
                }
              ],
              "src": "2976:222:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3269:53:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "3286:3:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "3309:5:7"
                            }
                          ],
                          "functionName": {
                            "name": "cleanup_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "3291:17:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3291:24:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "3279:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3279:37:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3279:37:7"
                  }
                ]
              },
              "name": "abi_encode_t_address_to_t_address_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "3257:5:7",
                  "type": ""
                },
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "3264:3:7",
                  "type": ""
                }
              ],
              "src": "3204:118:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3426:124:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "3436:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "3448:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3459:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "3444:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3444:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3436:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3516:6:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "3529:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3540:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3525:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3525:17:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "3472:43:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3472:71:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "3472:71:7"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "3398:9:7",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "3410:6:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "3421:4:7",
                  "type": ""
                }
              ],
              "src": "3328:222:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3588:28:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "3598:12:7",
                    "value": {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3605:5:7"
                    },
                    "variableNames": [
                      {
                        "name": "ret",
                        "nodeType": "YulIdentifier",
                        "src": "3598:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "identity",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "3574:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "ret",
                  "nodeType": "YulTypedName",
                  "src": "3584:3:7",
                  "type": ""
                }
              ],
              "src": "3556:60:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3682:82:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "3692:66:7",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "3750:5:7"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_uint160",
                                "nodeType": "YulIdentifier",
                                "src": "3732:17:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3732:24:7"
                            }
                          ],
                          "functionName": {
                            "name": "identity",
                            "nodeType": "YulIdentifier",
                            "src": "3723:8:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3723:34:7"
                        }
                      ],
                      "functionName": {
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulIdentifier",
                        "src": "3705:17:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3705:53:7"
                    },
                    "variableNames": [
                      {
                        "name": "converted",
                        "nodeType": "YulIdentifier",
                        "src": "3692:9:7"
                      }
                    ]
                  }
                ]
              },
              "name": "convert_t_uint160_to_t_uint160",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "3662:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "converted",
                  "nodeType": "YulTypedName",
                  "src": "3672:9:7",
                  "type": ""
                }
              ],
              "src": "3622:142:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3830:66:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "3840:50:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "3884:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "convert_t_uint160_to_t_uint160",
                        "nodeType": "YulIdentifier",
                        "src": "3853:30:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3853:37:7"
                    },
                    "variableNames": [
                      {
                        "name": "converted",
                        "nodeType": "YulIdentifier",
                        "src": "3840:9:7"
                      }
                    ]
                  }
                ]
              },
              "name": "convert_t_uint160_to_t_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "3810:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "converted",
                  "nodeType": "YulTypedName",
                  "src": "3820:9:7",
                  "type": ""
                }
              ],
              "src": "3770:126:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "3976:66:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "3986:50:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "4030:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "convert_t_uint160_to_t_address",
                        "nodeType": "YulIdentifier",
                        "src": "3999:30:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "3999:37:7"
                    },
                    "variableNames": [
                      {
                        "name": "converted",
                        "nodeType": "YulIdentifier",
                        "src": "3986:9:7"
                      }
                    ]
                  }
                ]
              },
              "name": "convert_t_contract$_IERC20_$182_to_t_address",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "3956:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "converted",
                  "nodeType": "YulTypedName",
                  "src": "3966:9:7",
                  "type": ""
                }
              ],
              "src": "3902:140:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "4127:80:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "4144:3:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4194:5:7"
                            }
                          ],
                          "functionName": {
                            "name": "convert_t_contract$_IERC20_$182_to_t_address",
                            "nodeType": "YulIdentifier",
                            "src": "4149:44:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4149:51:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4137:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4137:64:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4137:64:7"
                  }
                ]
              },
              "name": "abi_encode_t_contract$_IERC20_$182_to_t_address_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "4115:5:7",
                  "type": ""
                },
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "4122:3:7",
                  "type": ""
                }
              ],
              "src": "4048:159:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "4325:138:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "4335:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "4347:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4358:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "4343:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4343:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4335:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4429:6:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "4442:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4453:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4438:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4438:17:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_contract$_IERC20_$182_to_t_address_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "4371:57:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4371:85:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4371:85:7"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_contract$_IERC20_$182__to_t_address__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "4297:9:7",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "4309:6:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "4320:4:7",
                  "type": ""
                }
              ],
              "src": "4213:250:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "4565:73:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "4582:3:7"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "4587:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4575:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4575:19:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4575:19:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "4603:29:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "4622:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4627:4:7",
                          "type": "",
                          "value": "0x20"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "4618:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4618:14:7"
                    },
                    "variableNames": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulIdentifier",
                        "src": "4603:11:7"
                      }
                    ]
                  }
                ]
              },
              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "4537:3:7",
                  "type": ""
                },
                {
                  "name": "length",
                  "nodeType": "YulTypedName",
                  "src": "4542:6:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "updated_pos",
                  "nodeType": "YulTypedName",
                  "src": "4553:11:7",
                  "type": ""
                }
              ],
              "src": "4469:169:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "4750:70:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4772:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4780:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4768:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4768:14:7"
                        },
                        {
                          "hexValue": "556e5374616b6520616d6f756e74206d757374206265203e2030",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "4784:28:7",
                          "type": "",
                          "value": "UnStake amount must be > 0"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "4761:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4761:52:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "4761:52:7"
                  }
                ]
              },
              "name": "store_literal_in_memory_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "4742:6:7",
                  "type": ""
                }
              ],
              "src": "4644:176:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "4972:220:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "4982:74:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "5048:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5053:2:7",
                          "type": "",
                          "value": "26"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "4989:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "4989:67:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4982:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "5154:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "store_literal_in_memory_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf",
                        "nodeType": "YulIdentifier",
                        "src": "5065:88:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5065:93:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5065:93:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "5167:19:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "5178:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5183:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "5174:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5174:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "5167:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_stringliteral_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "4960:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "4968:3:7",
                  "type": ""
                }
              ],
              "src": "4826:366:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "5369:248:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "5379:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "5391:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5402:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "5387:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5387:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5379:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5426:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5437:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5422:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5422:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5445:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "5451:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "5441:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5441:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5415:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5415:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5415:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "5471:139:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5605:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_stringliteral_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "5479:124:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5479:131:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5471:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "5349:9:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "5364:4:7",
                  "type": ""
                }
              ],
              "src": "5198:419:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "5729:114:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5751:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5759:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5747:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5747:14:7"
                        },
                        {
                          "hexValue": "43616e6e6f7420756e7374616b6520696e20636f6f6c646f776e20706572696f",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "5763:34:7",
                          "type": "",
                          "value": "Cannot unstake in cooldown perio"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5740:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5740:58:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5740:58:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5819:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5827:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5815:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5815:15:7"
                        },
                        {
                          "hexValue": "64",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "5832:3:7",
                          "type": "",
                          "value": "d"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "5808:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "5808:28:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "5808:28:7"
                  }
                ]
              },
              "name": "store_literal_in_memory_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "5721:6:7",
                  "type": ""
                }
              ],
              "src": "5623:220:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "5995:220:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "6005:74:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "6071:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6076:2:7",
                          "type": "",
                          "value": "33"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "6012:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6012:67:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6005:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "6177:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "store_literal_in_memory_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4",
                        "nodeType": "YulIdentifier",
                        "src": "6088:88:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6088:93:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6088:93:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "6190:19:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "6201:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6206:2:7",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "6197:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6197:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "6190:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_stringliteral_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "5983:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "5991:3:7",
                  "type": ""
                }
              ],
              "src": "5849:366:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "6392:248:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "6402:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "6414:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "6425:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "6410:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6410:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6402:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6449:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6460:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6445:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6445:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "6468:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "6474:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "6464:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6464:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6438:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6438:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6438:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "6494:139:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6628:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_stringliteral_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "6502:124:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6502:131:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6494:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "6372:9:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "6387:4:7",
                  "type": ""
                }
              ],
              "src": "6221:419:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "6752:53:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6774:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6782:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6770:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6770:14:7"
                        },
                        {
                          "hexValue": "4e6f205374616b6573",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "6786:11:7",
                          "type": "",
                          "value": "No Stakes"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "6763:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6763:35:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "6763:35:7"
                  }
                ]
              },
              "name": "store_literal_in_memory_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "6744:6:7",
                  "type": ""
                }
              ],
              "src": "6646:159:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "6957:219:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "6967:73:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "7033:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7038:1:7",
                          "type": "",
                          "value": "9"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "6974:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "6974:66:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6967:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "7138:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "store_literal_in_memory_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed",
                        "nodeType": "YulIdentifier",
                        "src": "7049:88:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7049:93:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7049:93:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "7151:19:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "7162:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7167:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "7158:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7158:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "7151:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_stringliteral_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "6945:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "6953:3:7",
                  "type": ""
                }
              ],
              "src": "6811:365:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "7353:248:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "7363:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "7375:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "7386:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "7371:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7371:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7363:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7410:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7421:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7406:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7406:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7429:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "7435:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "7425:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7425:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7399:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7399:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7399:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "7455:139:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7589:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_stringliteral_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "7463:124:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7463:131:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7455:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "7333:9:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "7348:4:7",
                  "type": ""
                }
              ],
              "src": "7182:419:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "7713:68:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "7735:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7743:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7731:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7731:14:7"
                        },
                        {
                          "hexValue": "556e7374616b6520616d74203e207374616b656420616d74",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "7747:26:7",
                          "type": "",
                          "value": "Unstake amt > staked amt"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "7724:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7724:50:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "7724:50:7"
                  }
                ]
              },
              "name": "store_literal_in_memory_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "7705:6:7",
                  "type": ""
                }
              ],
              "src": "7607:174:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "7933:220:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "7943:74:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "8009:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8014:2:7",
                          "type": "",
                          "value": "24"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "7950:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "7950:67:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7943:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "8115:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "store_literal_in_memory_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b",
                        "nodeType": "YulIdentifier",
                        "src": "8026:88:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8026:93:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "8026:93:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "8128:19:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "8139:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8144:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "8135:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8135:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "8128:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_stringliteral_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "7921:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "7929:3:7",
                  "type": ""
                }
              ],
              "src": "7787:366:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "8330:248:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "8340:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "8352:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8363:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "8348:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8348:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8340:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "8387:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8398:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "8383:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8383:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8406:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "8412:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "8402:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8402:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "8376:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8376:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "8376:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "8432:139:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8566:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_stringliteral_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "8440:124:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8440:131:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8432:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "8310:9:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "8325:4:7",
                  "type": ""
                }
              ],
              "src": "8159:419:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "8647:80:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "8657:22:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "8672:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "8666:5:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8666:13:7"
                    },
                    "variableNames": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8657:5:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "8715:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulIdentifier",
                        "src": "8688:26:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8688:33:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "8688:33:7"
                  }
                ]
              },
              "name": "abi_decode_t_uint256_fromMemory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "offset",
                  "nodeType": "YulTypedName",
                  "src": "8625:6:7",
                  "type": ""
                },
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "8633:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "8641:5:7",
                  "type": ""
                }
              ],
              "src": "8584:143:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "8810:274:7",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8856:83:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                              "nodeType": "YulIdentifier",
                              "src": "8858:77:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8858:79:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8858:79:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "8831:7:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "8840:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "8827:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8827:23:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8852:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "8823:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "8823:32:7"
                    },
                    "nodeType": "YulIf",
                    "src": "8820:119:7"
                  },
                  {
                    "nodeType": "YulBlock",
                    "src": "8949:128:7",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8964:15:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8978:1:7",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "8968:6:7",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "8993:74:7",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "9039:9:7"
                                },
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "9050:6:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9035:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9035:22:7"
                            },
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "9059:7:7"
                            }
                          ],
                          "functionName": {
                            "name": "abi_decode_t_uint256_fromMemory",
                            "nodeType": "YulIdentifier",
                            "src": "9003:31:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9003:64:7"
                        },
                        "variableNames": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8993:6:7"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_uint256_fromMemory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "8780:9:7",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "8791:7:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "8803:6:7",
                  "type": ""
                }
              ],
              "src": "8733:351:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "9196:117:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "9218:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9226:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9214:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9214:14:7"
                        },
                        {
                          "hexValue": "436f6e74726163742062616c616e6365203c207374616b6564204253434d656d",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "9230:34:7",
                          "type": "",
                          "value": "Contract balance < staked BSCMem"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "9207:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "9207:58:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "9207:58:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "9286:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9294:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9282:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9282:15:7"
                        },
                        {
                          "hexValue": "65706164",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "9299:6:7",
                          "type": "",
                          "value": "epad"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "9275:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "9275:31:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "9275:31:7"
                  }
                ]
              },
              "name": "store_literal_in_memory_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "9188:6:7",
                  "type": ""
                }
              ],
              "src": "9090:223:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "9465:220:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "9475:74:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "9541:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "9546:2:7",
                          "type": "",
                          "value": "36"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "9482:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "9482:67:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9475:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "9647:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "store_literal_in_memory_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116",
                        "nodeType": "YulIdentifier",
                        "src": "9558:88:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "9558:93:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "9558:93:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "9660:19:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "9671:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "9676:2:7",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "9667:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "9667:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "9660:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_stringliteral_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "9453:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "9461:3:7",
                  "type": ""
                }
              ],
              "src": "9319:366:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "9862:248:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "9872:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "9884:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "9895:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "9880:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "9880:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9872:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "9919:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9930:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9915:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9915:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9938:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "9944:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "9934:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9934:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "9908:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "9908:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "9908:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "9964:139:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "10098:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_stringliteral_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "9972:124:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "9972:131:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9964:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "9842:9:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "9857:4:7",
                  "type": ""
                }
              ],
              "src": "9691:419:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "10144:152:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10161:1:7",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10164:77:7",
                          "type": "",
                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "10154:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "10154:88:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "10154:88:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10258:1:7",
                          "type": "",
                          "value": "4"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10261:4:7",
                          "type": "",
                          "value": "0x11"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "10251:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "10251:15:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "10251:15:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10282:1:7",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10285:4:7",
                          "type": "",
                          "value": "0x24"
                        }
                      ],
                      "functionName": {
                        "name": "revert",
                        "nodeType": "YulIdentifier",
                        "src": "10275:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "10275:15:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "10275:15:7"
                  }
                ]
              },
              "name": "panic_error_0x11",
              "nodeType": "YulFunctionDefinition",
              "src": "10116:180:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "10347:146:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "10357:25:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "10380:1:7"
                        }
                      ],
                      "functionName": {
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulIdentifier",
                        "src": "10362:17:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "10362:20:7"
                    },
                    "variableNames": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10357:1:7"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "10391:25:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "10414:1:7"
                        }
                      ],
                      "functionName": {
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulIdentifier",
                        "src": "10396:17:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "10396:20:7"
                    },
                    "variableNames": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10391:1:7"
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10438:22:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x11",
                              "nodeType": "YulIdentifier",
                              "src": "10440:16:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10440:18:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10440:18:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "10432:1:7"
                        },
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "10435:1:7"
                        }
                      ],
                      "functionName": {
                        "name": "lt",
                        "nodeType": "YulIdentifier",
                        "src": "10429:2:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "10429:8:7"
                    },
                    "nodeType": "YulIf",
                    "src": "10426:34:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "10470:17:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "10482:1:7"
                        },
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "10485:1:7"
                        }
                      ],
                      "functionName": {
                        "name": "sub",
                        "nodeType": "YulIdentifier",
                        "src": "10478:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "10478:9:7"
                    },
                    "variableNames": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "10470:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "checked_sub_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "x",
                  "nodeType": "YulTypedName",
                  "src": "10333:1:7",
                  "type": ""
                },
                {
                  "name": "y",
                  "nodeType": "YulTypedName",
                  "src": "10336:1:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "diff",
                  "nodeType": "YulTypedName",
                  "src": "10342:4:7",
                  "type": ""
                }
              ],
              "src": "10302:191:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "10605:76:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "10627:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10635:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10623:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10623:14:7"
                        },
                        {
                          "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "10639:34:7",
                          "type": "",
                          "value": "Ownable: caller is not the owner"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "10616:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "10616:58:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "10616:58:7"
                  }
                ]
              },
              "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "10597:6:7",
                  "type": ""
                }
              ],
              "src": "10499:182:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "10833:220:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "10843:74:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "10909:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10914:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "10850:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "10850:67:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10843:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "11015:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                        "nodeType": "YulIdentifier",
                        "src": "10926:88:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "10926:93:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "10926:93:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "11028:19:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "11039:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "11044:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "11035:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "11035:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "11028:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "10821:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "10829:3:7",
                  "type": ""
                }
              ],
              "src": "10687:366:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "11230:248:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "11240:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "11252:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "11263:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "11248:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "11248:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11240:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "11287:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11298:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11283:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11283:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "11306:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "11312:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "11302:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11302:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "11276:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "11276:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "11276:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "11332:139:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "11466:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "11340:124:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "11340:131:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11332:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "11210:9:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "11225:4:7",
                  "type": ""
                }
              ],
              "src": "11059:419:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "11590:68:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "11612:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11620:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11608:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11608:14:7"
                        },
                        {
                          "hexValue": "5374616b6520616d6f756e74206d757374206265203e2030",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "11624:26:7",
                          "type": "",
                          "value": "Stake amount must be > 0"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "11601:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "11601:50:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "11601:50:7"
                  }
                ]
              },
              "name": "store_literal_in_memory_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "11582:6:7",
                  "type": ""
                }
              ],
              "src": "11484:174:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "11810:220:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "11820:74:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "11886:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "11891:2:7",
                          "type": "",
                          "value": "24"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "11827:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "11827:67:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11820:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "11992:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "store_literal_in_memory_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2",
                        "nodeType": "YulIdentifier",
                        "src": "11903:88:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "11903:93:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "11903:93:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "12005:19:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "12016:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12021:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "12012:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "12012:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "12005:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_stringliteral_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "11798:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "11806:3:7",
                  "type": ""
                }
              ],
              "src": "11664:366:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "12207:248:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "12217:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "12229:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12240:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "12225:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "12225:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12217:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "12264:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12275:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12260:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12260:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "12283:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "12289:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "12279:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12279:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "12253:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "12253:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "12253:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "12309:139:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12443:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_stringliteral_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "12317:124:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "12317:131:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12309:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "12187:9:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "12202:4:7",
                  "type": ""
                }
              ],
              "src": "12036:419:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "12567:67:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "12589:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12597:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12585:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12585:14:7"
                        },
                        {
                          "hexValue": "43616c6c65722062616c616e6365203c20616d6f756e74",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "12601:25:7",
                          "type": "",
                          "value": "Caller balance < amount"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "12578:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "12578:49:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "12578:49:7"
                  }
                ]
              },
              "name": "store_literal_in_memory_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "12559:6:7",
                  "type": ""
                }
              ],
              "src": "12461:173:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "12786:220:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "12796:74:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "12862:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12867:2:7",
                          "type": "",
                          "value": "23"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "12803:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "12803:67:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12796:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "12968:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "store_literal_in_memory_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8",
                        "nodeType": "YulIdentifier",
                        "src": "12879:88:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "12879:93:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "12879:93:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "12981:19:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "12992:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12997:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "12988:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "12988:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "12981:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_stringliteral_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "12774:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "12782:3:7",
                  "type": ""
                }
              ],
              "src": "12640:366:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "13183:248:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "13193:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "13205:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "13216:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "13201:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "13201:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13193:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "13240:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13251:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13236:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13236:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "13259:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "13265:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "13255:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13255:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "13229:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "13229:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "13229:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "13285:139:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "13419:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_stringliteral_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "13293:124:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "13293:131:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13285:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "13163:9:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "13178:4:7",
                  "type": ""
                }
              ],
              "src": "13012:419:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "13481:261:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "13491:25:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "13514:1:7"
                        }
                      ],
                      "functionName": {
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulIdentifier",
                        "src": "13496:17:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "13496:20:7"
                    },
                    "variableNames": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13491:1:7"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "13525:25:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "13548:1:7"
                        }
                      ],
                      "functionName": {
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulIdentifier",
                        "src": "13530:17:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "13530:20:7"
                    },
                    "variableNames": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13525:1:7"
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13688:22:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x11",
                              "nodeType": "YulIdentifier",
                              "src": "13690:16:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13690:18:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13690:18:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "13609:1:7"
                        },
                        {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13616:66:7",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                            },
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "13684:1:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "13612:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13612:74:7"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "13606:2:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "13606:81:7"
                    },
                    "nodeType": "YulIf",
                    "src": "13603:107:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "13720:16:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "13731:1:7"
                        },
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "13734:1:7"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "13727:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "13727:9:7"
                    },
                    "variableNames": [
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "13720:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "checked_add_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "x",
                  "nodeType": "YulTypedName",
                  "src": "13468:1:7",
                  "type": ""
                },
                {
                  "name": "y",
                  "nodeType": "YulTypedName",
                  "src": "13471:1:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "sum",
                  "nodeType": "YulTypedName",
                  "src": "13477:3:7",
                  "type": ""
                }
              ],
              "src": "13437:305:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "13854:119:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "13876:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13884:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13872:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13872:14:7"
                        },
                        {
                          "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "13888:34:7",
                          "type": "",
                          "value": "Ownable: new owner is the zero a"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "13865:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "13865:58:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "13865:58:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "13944:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13952:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13940:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13940:15:7"
                        },
                        {
                          "hexValue": "646472657373",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "13957:8:7",
                          "type": "",
                          "value": "ddress"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "13933:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "13933:33:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "13933:33:7"
                  }
                ]
              },
              "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "13846:6:7",
                  "type": ""
                }
              ],
              "src": "13748:225:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "14125:220:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "14135:74:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "14201:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "14206:2:7",
                          "type": "",
                          "value": "38"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "14142:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "14142:67:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14135:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "14307:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                        "nodeType": "YulIdentifier",
                        "src": "14218:88:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "14218:93:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "14218:93:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "14320:19:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "14331:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "14336:2:7",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "14327:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "14327:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "14320:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "14113:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "14121:3:7",
                  "type": ""
                }
              ],
              "src": "13979:366:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "14522:248:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "14532:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "14544:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "14555:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "14540:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "14540:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14532:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "14579:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14590:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "14575:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14575:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "14598:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "14604:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "14594:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14594:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "14568:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "14568:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "14568:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "14624:139:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "14758:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "14632:124:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "14632:131:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14624:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "14502:9:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "14517:4:7",
                  "type": ""
                }
              ],
              "src": "14351:419:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "14804:152:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "14821:1:7",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "14824:77:7",
                          "type": "",
                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "14814:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "14814:88:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "14814:88:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "14918:1:7",
                          "type": "",
                          "value": "4"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "14921:4:7",
                          "type": "",
                          "value": "0x12"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "14911:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "14911:15:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "14911:15:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "14942:1:7",
                          "type": "",
                          "value": "0"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "14945:4:7",
                          "type": "",
                          "value": "0x24"
                        }
                      ],
                      "functionName": {
                        "name": "revert",
                        "nodeType": "YulIdentifier",
                        "src": "14935:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "14935:15:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "14935:15:7"
                  }
                ]
              },
              "name": "panic_error_0x12",
              "nodeType": "YulFunctionDefinition",
              "src": "14776:180:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "15004:143:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "15014:25:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "15037:1:7"
                        }
                      ],
                      "functionName": {
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulIdentifier",
                        "src": "15019:17:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "15019:20:7"
                    },
                    "variableNames": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15014:1:7"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "15048:25:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "15071:1:7"
                        }
                      ],
                      "functionName": {
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulIdentifier",
                        "src": "15053:17:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "15053:20:7"
                    },
                    "variableNames": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15048:1:7"
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15095:22:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "panic_error_0x12",
                              "nodeType": "YulIdentifier",
                              "src": "15097:16:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15097:18:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15097:18:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "15092:1:7"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "15085:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "15085:9:7"
                    },
                    "nodeType": "YulIf",
                    "src": "15082:35:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "15127:14:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "x",
                          "nodeType": "YulIdentifier",
                          "src": "15136:1:7"
                        },
                        {
                          "name": "y",
                          "nodeType": "YulIdentifier",
                          "src": "15139:1:7"
                        }
                      ],
                      "functionName": {
                        "name": "div",
                        "nodeType": "YulIdentifier",
                        "src": "15132:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "15132:9:7"
                    },
                    "variableNames": [
                      {
                        "name": "r",
                        "nodeType": "YulIdentifier",
                        "src": "15127:1:7"
                      }
                    ]
                  }
                ]
              },
              "name": "checked_div_t_uint256",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "x",
                  "nodeType": "YulTypedName",
                  "src": "14993:1:7",
                  "type": ""
                },
                {
                  "name": "y",
                  "nodeType": "YulTypedName",
                  "src": "14996:1:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "r",
                  "nodeType": "YulTypedName",
                  "src": "15002:1:7",
                  "type": ""
                }
              ],
              "src": "14962:185:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "15279:206:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "15289:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "15301:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "15312:2:7",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "15297:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "15297:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15289:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "15369:6:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "15382:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15393:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "15378:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15378:17:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "15325:43:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "15325:71:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "15325:71:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "15450:6:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "15463:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15474:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "15459:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15459:18:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "15406:43:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "15406:72:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "15406:72:7"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "15243:9:7",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "15255:6:7",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "15263:6:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "15274:4:7",
                  "type": ""
                }
              ],
              "src": "15153:332:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "15645:288:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "15655:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "15667:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "15678:2:7",
                          "type": "",
                          "value": "96"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "15663:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "15663:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "15655:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "15735:6:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "15748:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15759:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "15744:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15744:17:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "15691:43:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "15691:71:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "15691:71:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "15816:6:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "15829:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15840:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "15825:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15825:18:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "15772:43:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "15772:72:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "15772:72:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "15898:6:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "15911:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15922:2:7",
                              "type": "",
                              "value": "64"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "15907:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15907:18:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "15854:43:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "15854:72:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "15854:72:7"
                  }
                ]
              },
              "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "15601:9:7",
                  "type": ""
                },
                {
                  "name": "value2",
                  "nodeType": "YulTypedName",
                  "src": "15613:6:7",
                  "type": ""
                },
                {
                  "name": "value1",
                  "nodeType": "YulTypedName",
                  "src": "15621:6:7",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "15629:6:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "15640:4:7",
                  "type": ""
                }
              ],
              "src": "15491:442:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "15979:76:7",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16033:16:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16042:1:7",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16045:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "16035:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16035:12:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16035:12:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "16002:5:7"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "16024:5:7"
                                }
                              ],
                              "functionName": {
                                "name": "cleanup_t_bool",
                                "nodeType": "YulIdentifier",
                                "src": "16009:14:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16009:21:7"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "15999:2:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15999:32:7"
                        }
                      ],
                      "functionName": {
                        "name": "iszero",
                        "nodeType": "YulIdentifier",
                        "src": "15992:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "15992:40:7"
                    },
                    "nodeType": "YulIf",
                    "src": "15989:60:7"
                  }
                ]
              },
              "name": "validator_revert_t_bool",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "15972:5:7",
                  "type": ""
                }
              ],
              "src": "15939:116:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "16121:77:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "16131:22:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "offset",
                          "nodeType": "YulIdentifier",
                          "src": "16146:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "16140:5:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "16140:13:7"
                    },
                    "variableNames": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16131:5:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "16186:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulIdentifier",
                        "src": "16162:23:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "16162:30:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "16162:30:7"
                  }
                ]
              },
              "name": "abi_decode_t_bool_fromMemory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "offset",
                  "nodeType": "YulTypedName",
                  "src": "16099:6:7",
                  "type": ""
                },
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "16107:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "16115:5:7",
                  "type": ""
                }
              ],
              "src": "16061:137:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "16278:271:7",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16324:83:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [],
                            "functionName": {
                              "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                              "nodeType": "YulIdentifier",
                              "src": "16326:77:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16326:79:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16326:79:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "16299:7:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "16308:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "16295:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16295:23:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "16320:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "slt",
                        "nodeType": "YulIdentifier",
                        "src": "16291:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "16291:32:7"
                    },
                    "nodeType": "YulIf",
                    "src": "16288:119:7"
                  },
                  {
                    "nodeType": "YulBlock",
                    "src": "16417:125:7",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16432:15:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "16446:1:7",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "16436:6:7",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "16461:71:7",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "16504:9:7"
                                },
                                {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "16515:6:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "16500:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16500:22:7"
                            },
                            {
                              "name": "dataEnd",
                              "nodeType": "YulIdentifier",
                              "src": "16524:7:7"
                            }
                          ],
                          "functionName": {
                            "name": "abi_decode_t_bool_fromMemory",
                            "nodeType": "YulIdentifier",
                            "src": "16471:28:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16471:61:7"
                        },
                        "variableNames": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16461:6:7"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              "name": "abi_decode_tuple_t_bool_fromMemory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "16248:9:7",
                  "type": ""
                },
                {
                  "name": "dataEnd",
                  "nodeType": "YulTypedName",
                  "src": "16259:7:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "16271:6:7",
                  "type": ""
                }
              ],
              "src": "16204:345:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "16661:123:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "16683:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16691:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "16679:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16679:14:7"
                        },
                        {
                          "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "16695:34:7",
                          "type": "",
                          "value": "SafeERC20: ERC20 operation did n"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "16672:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "16672:58:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "16672:58:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "16751:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16759:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "16747:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16747:15:7"
                        },
                        {
                          "hexValue": "6f742073756363656564",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "16764:12:7",
                          "type": "",
                          "value": "ot succeed"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "16740:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "16740:37:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "16740:37:7"
                  }
                ]
              },
              "name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "16653:6:7",
                  "type": ""
                }
              ],
              "src": "16555:229:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "16936:220:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "16946:74:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "17012:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "17017:2:7",
                          "type": "",
                          "value": "42"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "16953:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "16953:67:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "16946:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "17118:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                        "nodeType": "YulIdentifier",
                        "src": "17029:88:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "17029:93:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "17029:93:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "17131:19:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "17142:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "17147:2:7",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "17138:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "17138:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "17131:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "16924:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "16932:3:7",
                  "type": ""
                }
              ],
              "src": "16790:366:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "17333:248:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "17343:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "17355:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "17366:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "17351:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "17351:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17343:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "17390:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17401:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17386:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17386:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "17409:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "17415:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "17405:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17405:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "17379:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "17379:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "17379:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "17435:139:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "17569:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "17443:124:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "17443:131:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17435:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "17313:9:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "17328:4:7",
                  "type": ""
                }
              ],
              "src": "17162:419:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "17693:119:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "17715:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17723:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17711:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17711:14:7"
                        },
                        {
                          "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "17727:34:7",
                          "type": "",
                          "value": "Address: insufficient balance fo"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "17704:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "17704:58:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "17704:58:7"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "17783:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17791:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17779:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17779:15:7"
                        },
                        {
                          "hexValue": "722063616c6c",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "17796:8:7",
                          "type": "",
                          "value": "r call"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "17772:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "17772:33:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "17772:33:7"
                  }
                ]
              },
              "name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "17685:6:7",
                  "type": ""
                }
              ],
              "src": "17587:225:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "17964:220:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "17974:74:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "18040:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "18045:2:7",
                          "type": "",
                          "value": "38"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "17981:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "17981:67:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17974:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "18146:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                        "nodeType": "YulIdentifier",
                        "src": "18057:88:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "18057:93:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "18057:93:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "18159:19:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "18170:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "18175:2:7",
                          "type": "",
                          "value": "64"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "18166:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "18166:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "18159:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "17952:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "17960:3:7",
                  "type": ""
                }
              ],
              "src": "17818:366:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "18361:248:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "18371:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "18383:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "18394:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "18379:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "18379:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18371:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "18418:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18429:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "18414:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18414:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "18437:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "18443:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "18433:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18433:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "18407:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "18407:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "18407:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "18463:139:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "18597:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "18471:124:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "18471:131:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "18463:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "18341:9:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "18356:4:7",
                  "type": ""
                }
              ],
              "src": "18190:419:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "18721:73:7",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "18743:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18751:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "18739:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18739:14:7"
                        },
                        {
                          "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                          "kind": "string",
                          "nodeType": "YulLiteral",
                          "src": "18755:31:7",
                          "type": "",
                          "value": "Address: call to non-contract"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "18732:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "18732:55:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "18732:55:7"
                  }
                ]
              },
              "name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "memPtr",
                  "nodeType": "YulTypedName",
                  "src": "18713:6:7",
                  "type": ""
                }
              ],
              "src": "18615:179:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "18946:220:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "18956:74:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "19022:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "19027:2:7",
                          "type": "",
                          "value": "29"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "18963:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "18963:67:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18956:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "19128:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                        "nodeType": "YulIdentifier",
                        "src": "19039:88:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "19039:93:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "19039:93:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "19141:19:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "19152:3:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "19157:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "19148:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "19148:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "19141:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "18934:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "18942:3:7",
                  "type": ""
                }
              ],
              "src": "18800:366:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "19343:248:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "19353:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "19365:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "19376:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "19361:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "19361:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "19353:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "19400:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19411:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "19396:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19396:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "19419:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "19425:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "19415:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19415:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "19389:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "19389:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "19389:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "19445:139:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "19579:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "19453:124:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "19453:131:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "19445:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "19323:9:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "19338:4:7",
                  "type": ""
                }
              ],
              "src": "19172:419:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "19655:40:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "19666:22:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "19682:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "19676:5:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "19676:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "19666:6:7"
                      }
                    ]
                  }
                ]
              },
              "name": "array_length_t_bytes_memory_ptr",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "19638:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "length",
                  "nodeType": "YulTypedName",
                  "src": "19648:6:7",
                  "type": ""
                }
              ],
              "src": "19597:98:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "19814:34:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "19824:18:7",
                    "value": {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "19839:3:7"
                    },
                    "variableNames": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulIdentifier",
                        "src": "19824:11:7"
                      }
                    ]
                  }
                ]
              },
              "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "19786:3:7",
                  "type": ""
                },
                {
                  "name": "length",
                  "nodeType": "YulTypedName",
                  "src": "19791:6:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "updated_pos",
                  "nodeType": "YulTypedName",
                  "src": "19802:11:7",
                  "type": ""
                }
              ],
              "src": "19701:147:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "19903:258:7",
                "statements": [
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "19913:10:7",
                    "value": {
                      "kind": "number",
                      "nodeType": "YulLiteral",
                      "src": "19922:1:7",
                      "type": "",
                      "value": "0"
                    },
                    "variables": [
                      {
                        "name": "i",
                        "nodeType": "YulTypedName",
                        "src": "19917:1:7",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19982:63:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "20007:3:7"
                                  },
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "20012:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20003:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20003:11:7"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "20026:3:7"
                                      },
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "20031:1:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20022:3:7"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20022:11:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "20016:5:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20016:18:7"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "19996:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19996:39:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19996:39:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "i",
                          "nodeType": "YulIdentifier",
                          "src": "19943:1:7"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "19946:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "lt",
                        "nodeType": "YulIdentifier",
                        "src": "19940:2:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "19940:13:7"
                    },
                    "nodeType": "YulForLoop",
                    "post": {
                      "nodeType": "YulBlock",
                      "src": "19954:19:7",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "19956:15:7",
                          "value": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "19965:1:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19968:2:7",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19961:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19961:10:7"
                          },
                          "variableNames": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "19956:1:7"
                            }
                          ]
                        }
                      ]
                    },
                    "pre": {
                      "nodeType": "YulBlock",
                      "src": "19936:3:7",
                      "statements": []
                    },
                    "src": "19932:113:7"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20079:76:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "20129:3:7"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20134:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20125:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20125:16:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20143:1:7",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20118:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20118:27:7"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20118:27:7"
                        }
                      ]
                    },
                    "condition": {
                      "arguments": [
                        {
                          "name": "i",
                          "nodeType": "YulIdentifier",
                          "src": "20060:1:7"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "20063:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "gt",
                        "nodeType": "YulIdentifier",
                        "src": "20057:2:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "20057:13:7"
                    },
                    "nodeType": "YulIf",
                    "src": "20054:101:7"
                  }
                ]
              },
              "name": "copy_memory_to_memory",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "src",
                  "nodeType": "YulTypedName",
                  "src": "19885:3:7",
                  "type": ""
                },
                {
                  "name": "dst",
                  "nodeType": "YulTypedName",
                  "src": "19890:3:7",
                  "type": ""
                },
                {
                  "name": "length",
                  "nodeType": "YulTypedName",
                  "src": "19895:6:7",
                  "type": ""
                }
              ],
              "src": "19854:307:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "20275:265:7",
                "statements": [
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "20285:52:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "20331:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "array_length_t_bytes_memory_ptr",
                        "nodeType": "YulIdentifier",
                        "src": "20299:31:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "20299:38:7"
                    },
                    "variables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "20289:6:7",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "20346:95:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "20429:3:7"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "20434:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "20353:75:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "20353:88:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20346:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "20476:5:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "20483:4:7",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "20472:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "20472:16:7"
                        },
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "20490:3:7"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "20495:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulIdentifier",
                        "src": "20450:21:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "20450:52:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "20450:52:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "20511:23:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "20522:3:7"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "20527:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "20518:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "20518:16:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "20511:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "20256:5:7",
                  "type": ""
                },
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "20263:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "20271:3:7",
                  "type": ""
                }
              ],
              "src": "20167:373:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "20680:137:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "20691:100:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "20778:6:7"
                        },
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "20787:3:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "20698:79:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "20698:93:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20691:3:7"
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "20801:10:7",
                    "value": {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20808:3:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "20801:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "20659:3:7",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "20665:6:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "20676:3:7",
                  "type": ""
                }
              ],
              "src": "20546:271:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "20882:40:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "20893:22:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "20909:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "mload",
                        "nodeType": "YulIdentifier",
                        "src": "20903:5:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "20903:12:7"
                    },
                    "variableNames": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "20893:6:7"
                      }
                    ]
                  }
                ]
              },
              "name": "array_length_t_string_memory_ptr",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "20865:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "length",
                  "nodeType": "YulTypedName",
                  "src": "20875:6:7",
                  "type": ""
                }
              ],
              "src": "20823:99:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "20976:54:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "20986:38:7",
                    "value": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "21004:5:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21011:2:7",
                              "type": "",
                              "value": "31"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "21000:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21000:14:7"
                        },
                        {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21020:2:7",
                              "type": "",
                              "value": "31"
                            }
                          ],
                          "functionName": {
                            "name": "not",
                            "nodeType": "YulIdentifier",
                            "src": "21016:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21016:7:7"
                        }
                      ],
                      "functionName": {
                        "name": "and",
                        "nodeType": "YulIdentifier",
                        "src": "20996:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "20996:28:7"
                    },
                    "variableNames": [
                      {
                        "name": "result",
                        "nodeType": "YulIdentifier",
                        "src": "20986:6:7"
                      }
                    ]
                  }
                ]
              },
              "name": "round_up_to_mul_of_32",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "20959:5:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "result",
                  "nodeType": "YulTypedName",
                  "src": "20969:6:7",
                  "type": ""
                }
              ],
              "src": "20928:102:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "21128:272:7",
                "statements": [
                  {
                    "nodeType": "YulVariableDeclaration",
                    "src": "21138:53:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "21185:5:7"
                        }
                      ],
                      "functionName": {
                        "name": "array_length_t_string_memory_ptr",
                        "nodeType": "YulIdentifier",
                        "src": "21152:32:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "21152:39:7"
                    },
                    "variables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "21142:6:7",
                        "type": ""
                      }
                    ]
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "21200:78:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "21266:3:7"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "21271:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "21207:58:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "21207:71:7"
                    },
                    "variableNames": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21200:3:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "21313:5:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21320:4:7",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "21309:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21309:16:7"
                        },
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "21327:3:7"
                        },
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "21332:6:7"
                        }
                      ],
                      "functionName": {
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulIdentifier",
                        "src": "21287:21:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "21287:52:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "21287:52:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "21348:46:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "21359:3:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "21386:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "round_up_to_mul_of_32",
                            "nodeType": "YulIdentifier",
                            "src": "21364:21:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21364:29:7"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "21355:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "21355:39:7"
                    },
                    "variableNames": [
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "21348:3:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "value",
                  "nodeType": "YulTypedName",
                  "src": "21109:5:7",
                  "type": ""
                },
                {
                  "name": "pos",
                  "nodeType": "YulTypedName",
                  "src": "21116:3:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "end",
                  "nodeType": "YulTypedName",
                  "src": "21124:3:7",
                  "type": ""
                }
              ],
              "src": "21036:364:7"
            },
            {
              "body": {
                "nodeType": "YulBlock",
                "src": "21524:195:7",
                "statements": [
                  {
                    "nodeType": "YulAssignment",
                    "src": "21534:26:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "headStart",
                          "nodeType": "YulIdentifier",
                          "src": "21546:9:7"
                        },
                        {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "21557:2:7",
                          "type": "",
                          "value": "32"
                        }
                      ],
                      "functionName": {
                        "name": "add",
                        "nodeType": "YulIdentifier",
                        "src": "21542:3:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "21542:18:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21534:4:7"
                      }
                    ]
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "21581:9:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "21592:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "21577:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21577:17:7"
                        },
                        {
                          "arguments": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "21600:4:7"
                            },
                            {
                              "name": "headStart",
                              "nodeType": "YulIdentifier",
                              "src": "21606:9:7"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "21596:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "21596:20:7"
                        }
                      ],
                      "functionName": {
                        "name": "mstore",
                        "nodeType": "YulIdentifier",
                        "src": "21570:6:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "21570:47:7"
                    },
                    "nodeType": "YulExpressionStatement",
                    "src": "21570:47:7"
                  },
                  {
                    "nodeType": "YulAssignment",
                    "src": "21626:86:7",
                    "value": {
                      "arguments": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "21698:6:7"
                        },
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "21707:4:7"
                        }
                      ],
                      "functionName": {
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulIdentifier",
                        "src": "21634:63:7"
                      },
                      "nodeType": "YulFunctionCall",
                      "src": "21634:78:7"
                    },
                    "variableNames": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21626:4:7"
                      }
                    ]
                  }
                ]
              },
              "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
              "nodeType": "YulFunctionDefinition",
              "parameters": [
                {
                  "name": "headStart",
                  "nodeType": "YulTypedName",
                  "src": "21496:9:7",
                  "type": ""
                },
                {
                  "name": "value0",
                  "nodeType": "YulTypedName",
                  "src": "21508:6:7",
                  "type": ""
                }
              ],
              "returnVariables": [
                {
                  "name": "tail",
                  "nodeType": "YulTypedName",
                  "src": "21519:4:7",
                  "type": ""
                }
              ],
              "src": "21406:313:7"
            }
          ]
        },
        "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$182_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$182_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$182_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$182__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$182_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"UnStake amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot unstake in cooldown perio\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed(memPtr) {\n\n        mstore(add(memPtr, 0), \"No Stakes\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unstake amt > staked amt\")\n\n    }\n\n    function abi_encode_t_stringliteral_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract balance < staked BSCMem\")\n\n        mstore(add(memPtr, 32), \"epad\")\n\n    }\n\n    function abi_encode_t_stringliteral_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller balance < amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
        "id": 7,
        "language": "Yul",
        "name": "#utility.yul"
      }
    ],
    "sourceMap": "340:4885:6:-:0;;;1000:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1111:1:6;1065:48;;1073:25;1065:48;;;;1057:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1172:25;1151:18;;:46;;;;;;;;;;;;;;;;;;1000:205;340:4885;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;1402:169::-;1486:11;1520:6;1515:3;1508:19;1560:4;1555:3;1551:14;1536:29;;1402:169;;;;:::o;1577:172::-;1717:24;1713:1;1705:6;1701:14;1694:48;1577:172;:::o;1755:366::-;1897:3;1918:67;1982:2;1977:3;1918:67;:::i;:::-;1911:74;;1994:93;2083:3;1994:93;:::i;:::-;2112:2;2107:3;2103:12;2096:19;;1755:366;;;:::o;2127:419::-;2293:4;2331:2;2320:9;2316:18;2308:26;;2380:9;2374:4;2370:20;2366:1;2355:9;2351:17;2344:47;2408:131;2534:4;2408:131;:::i;:::-;2400:139;;2127:419;;;:::o;340:4885:6:-;;;;;;;",
    "deployedSourceMap": "340:4885:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;787:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3376:960;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;4412:356:6;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4843:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;501:32:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1907:1144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;744:36:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;604:24;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;787:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3376:960::-;3444:1;3435:6;:10;3427:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;3489:21;3513:10;:22;3524:10;3513:22;;;;;;;;;;;;;;;3489:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3548:21;3572:28;3583:7;:16;;;3572:10;:28::i;:::-;3548:52;;3636:1;3619:13;:18;;3611:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3713:1;3696:7;:14;;;:18;3688:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;3757:7;:14;;;3747:6;:24;;3739:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3868:6;3821:18;;;;;;;;;;;:28;;;3858:4;3821:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;3813:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;3946:6;3928:7;:14;;:24;;;;;;;:::i;:::-;;;;;;;;3985:1;3967:7;:14;;;:19;3963:72;;;4022:1;4003:7;:16;;:20;;;;;3963:72;4072:6;4047:21;;:31;;;;;;;:::i;:::-;;;;;;;;4114:7;4089:10;:22;4100:10;4089:22;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4175:51;4207:10;4219:6;4175:18;;;;;;;;;;;:31;;;;:51;;;;;:::i;:::-;4252:10;4244:44;;;4264:6;4272:15;4244:44;;;;;;;:::i;:::-;;;;;;;;3416:920;;3376:960;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;4412:356:6:-;4453:24;4479:21;4513;4537:10;:22;4548:10;4537:22;;;;;;;;;;;;;;;4513:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4589:7;:14;;;4570:33;;4637:1;4618:7;:16;;;:20;4614:147;;;4671:28;4682:7;:16;;;4671:10;:28::i;:::-;4655:44;;4614:147;;;4748:1;4732:17;;4614:147;4502:266;4412:356;;:::o;4843:94::-;4888:7;4915;:14;;;;4908:21;;4843:94;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;501:32:6:-;;;;;;;;;;;;;:::o;1907:1144::-;1973:1;1964:6;:10;1956:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2014:25;2042:18;;;;;;;;;;;:28;;;2071:10;2042:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2014:68;;2122:6;2101:17;:27;;2093:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2167:21;2191:10;:22;2202:10;2191:22;;;;;;;;;;;;;;;2167:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2229:7;:17;;;2224:221;;2283:4;2263:7;:17;;:24;;;;;;;;;;;2302:7;2315:10;2302:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2418:15;2399:7;:16;;:34;;;;;2224:221;2551:7;:17;;;:44;;;;;2593:1;2573:7;:16;;;:21;2551:44;:69;;;;;2618:1;2600:7;:14;;;:19;2551:69;2547:194;;;2714:15;2695:7;:16;;:34;;;;;2547:194;2753:70;2789:10;2809:4;2816:6;2753:18;;;;;;;;;;;:35;;;;:70;;;;;;:::i;:::-;2859:6;2834:21;;:31;;;;;;;:::i;:::-;;;;;;;;2894:6;2876:7;:14;;:24;;;;;;;:::i;:::-;;;;;;;;2936:7;2911:10;:22;2922:10;2911:22;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3006:10;3000:43;;;3018:6;3026:7;:16;;;3000:43;;;;;;;:::i;:::-;;;;;;;;1945:1106;;1907:1144;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;744:36:6:-;;;;:::o;604:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5035:187::-;5096:7;5208:6;5196:8;5178:15;:26;;;;:::i;:::-;5177:37;;;;:::i;:::-;5170:44;;5035:187;;;:::o;701:205:2:-;813:86;833:5;863:23;;;888:2;892:5;840:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:19;:86::i;:::-;701:205;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;912:241:2:-;1050:96;1070:5;1100:27;;;1129:4;1135:2;1139:5;1077:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:19;:96::i;:::-;912:241;;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3626:95;;3755:1;3735:10;:17;:21;3731:176;;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:176;3277:636;3207:706;;:::o;3514:223:3:-;3647:12;3678:52;3700:6;3708:4;3714:1;3717:12;3678:21;:52::i;:::-;3671:59;;3514:223;;;;;:::o;4601:499::-;4766:12;4823:5;4798:21;:30;;4790:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;4889:18;4900:6;4889:10;:18::i;:::-;4881:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4953:12;4967:23;4994:6;:11;;5013:5;5020:4;4994:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:73;;;;5042:51;5059:7;5068:10;5080:12;5042:16;:51::i;:::-;5035:58;;;;4601:499;;;;;;:::o;771:377::-;831:4;1034:12;1099:7;1087:20;1079:28;;1140:1;1133:4;:8;1126:15;;;771:377;;;:::o;7214:692::-;7360:12;7388:7;7384:516;;;7418:10;7411:17;;;;7384:516;7549:1;7529:10;:17;:21;7525:365;;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7525:365;7862:12;7855:20;;;;;;;;;;;:::i;:::-;;;;;;;;7214:692;;;;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:77::-;1424:7;1453:5;1442:16;;1387:77;;;:::o;1470:118::-;1557:24;1575:5;1557:24;:::i;:::-;1552:3;1545:37;1470:118;;:::o;1594:430::-;1737:4;1775:2;1764:9;1760:18;1752:26;;1788:65;1850:1;1839:9;1835:17;1826:6;1788:65;:::i;:::-;1863:72;1931:2;1920:9;1916:18;1907:6;1863:72;:::i;:::-;1945;2013:2;2002:9;1998:18;1989:6;1945:72;:::i;:::-;1594:430;;;;;;:::o;2030:122::-;2103:24;2121:5;2103:24;:::i;:::-;2096:5;2093:35;2083:63;;2142:1;2139;2132:12;2083:63;2030:122;:::o;2158:139::-;2204:5;2242:6;2229:20;2220:29;;2258:33;2285:5;2258:33;:::i;:::-;2158:139;;;;:::o;2303:329::-;2362:6;2411:2;2399:9;2390:7;2386:23;2382:32;2379:119;;;2417:79;;:::i;:::-;2379:119;2537:1;2562:53;2607:7;2598:6;2587:9;2583:22;2562:53;:::i;:::-;2552:63;;2508:117;2303:329;;;;:::o;2638:332::-;2759:4;2797:2;2786:9;2782:18;2774:26;;2810:71;2878:1;2867:9;2863:17;2854:6;2810:71;:::i;:::-;2891:72;2959:2;2948:9;2944:18;2935:6;2891:72;:::i;:::-;2638:332;;;;;:::o;2976:222::-;3069:4;3107:2;3096:9;3092:18;3084:26;;3120:71;3188:1;3177:9;3173:17;3164:6;3120:71;:::i;:::-;2976:222;;;;:::o;3204:118::-;3291:24;3309:5;3291:24;:::i;:::-;3286:3;3279:37;3204:118;;:::o;3328:222::-;3421:4;3459:2;3448:9;3444:18;3436:26;;3472:71;3540:1;3529:9;3525:17;3516:6;3472:71;:::i;:::-;3328:222;;;;:::o;3556:60::-;3584:3;3605:5;3598:12;;3556:60;;;:::o;3622:142::-;3672:9;3705:53;3723:34;3732:24;3750:5;3732:24;:::i;:::-;3723:34;:::i;:::-;3705:53;:::i;:::-;3692:66;;3622:142;;;:::o;3770:126::-;3820:9;3853:37;3884:5;3853:37;:::i;:::-;3840:50;;3770:126;;;:::o;3902:140::-;3966:9;3999:37;4030:5;3999:37;:::i;:::-;3986:50;;3902:140;;;:::o;4048:159::-;4149:51;4194:5;4149:51;:::i;:::-;4144:3;4137:64;4048:159;;:::o;4213:250::-;4320:4;4358:2;4347:9;4343:18;4335:26;;4371:85;4453:1;4442:9;4438:17;4429:6;4371:85;:::i;:::-;4213:250;;;;:::o;4469:169::-;4553:11;4587:6;4582:3;4575:19;4627:4;4622:3;4618:14;4603:29;;4469:169;;;;:::o;4644:176::-;4784:28;4780:1;4772:6;4768:14;4761:52;4644:176;:::o;4826:366::-;4968:3;4989:67;5053:2;5048:3;4989:67;:::i;:::-;4982:74;;5065:93;5154:3;5065:93;:::i;:::-;5183:2;5178:3;5174:12;5167:19;;4826:366;;;:::o;5198:419::-;5364:4;5402:2;5391:9;5387:18;5379:26;;5451:9;5445:4;5441:20;5437:1;5426:9;5422:17;5415:47;5479:131;5605:4;5479:131;:::i;:::-;5471:139;;5198:419;;;:::o;5623:220::-;5763:34;5759:1;5751:6;5747:14;5740:58;5832:3;5827:2;5819:6;5815:15;5808:28;5623:220;:::o;5849:366::-;5991:3;6012:67;6076:2;6071:3;6012:67;:::i;:::-;6005:74;;6088:93;6177:3;6088:93;:::i;:::-;6206:2;6201:3;6197:12;6190:19;;5849:366;;;:::o;6221:419::-;6387:4;6425:2;6414:9;6410:18;6402:26;;6474:9;6468:4;6464:20;6460:1;6449:9;6445:17;6438:47;6502:131;6628:4;6502:131;:::i;:::-;6494:139;;6221:419;;;:::o;6646:159::-;6786:11;6782:1;6774:6;6770:14;6763:35;6646:159;:::o;6811:365::-;6953:3;6974:66;7038:1;7033:3;6974:66;:::i;:::-;6967:73;;7049:93;7138:3;7049:93;:::i;:::-;7167:2;7162:3;7158:12;7151:19;;6811:365;;;:::o;7182:419::-;7348:4;7386:2;7375:9;7371:18;7363:26;;7435:9;7429:4;7425:20;7421:1;7410:9;7406:17;7399:47;7463:131;7589:4;7463:131;:::i;:::-;7455:139;;7182:419;;;:::o;7607:174::-;7747:26;7743:1;7735:6;7731:14;7724:50;7607:174;:::o;7787:366::-;7929:3;7950:67;8014:2;8009:3;7950:67;:::i;:::-;7943:74;;8026:93;8115:3;8026:93;:::i;:::-;8144:2;8139:3;8135:12;8128:19;;7787:366;;;:::o;8159:419::-;8325:4;8363:2;8352:9;8348:18;8340:26;;8412:9;8406:4;8402:20;8398:1;8387:9;8383:17;8376:47;8440:131;8566:4;8440:131;:::i;:::-;8432:139;;8159:419;;;:::o;8584:143::-;8641:5;8672:6;8666:13;8657:22;;8688:33;8715:5;8688:33;:::i;:::-;8584:143;;;;:::o;8733:351::-;8803:6;8852:2;8840:9;8831:7;8827:23;8823:32;8820:119;;;8858:79;;:::i;:::-;8820:119;8978:1;9003:64;9059:7;9050:6;9039:9;9035:22;9003:64;:::i;:::-;8993:74;;8949:128;8733:351;;;;:::o;9090:223::-;9230:34;9226:1;9218:6;9214:14;9207:58;9299:6;9294:2;9286:6;9282:15;9275:31;9090:223;:::o;9319:366::-;9461:3;9482:67;9546:2;9541:3;9482:67;:::i;:::-;9475:74;;9558:93;9647:3;9558:93;:::i;:::-;9676:2;9671:3;9667:12;9660:19;;9319:366;;;:::o;9691:419::-;9857:4;9895:2;9884:9;9880:18;9872:26;;9944:9;9938:4;9934:20;9930:1;9919:9;9915:17;9908:47;9972:131;10098:4;9972:131;:::i;:::-;9964:139;;9691:419;;;:::o;10116:180::-;10164:77;10161:1;10154:88;10261:4;10258:1;10251:15;10285:4;10282:1;10275:15;10302:191;10342:4;10362:20;10380:1;10362:20;:::i;:::-;10357:25;;10396:20;10414:1;10396:20;:::i;:::-;10391:25;;10435:1;10432;10429:8;10426:34;;;10440:18;;:::i;:::-;10426:34;10485:1;10482;10478:9;10470:17;;10302:191;;;;:::o;10499:182::-;10639:34;10635:1;10627:6;10623:14;10616:58;10499:182;:::o;10687:366::-;10829:3;10850:67;10914:2;10909:3;10850:67;:::i;:::-;10843:74;;10926:93;11015:3;10926:93;:::i;:::-;11044:2;11039:3;11035:12;11028:19;;10687:366;;;:::o;11059:419::-;11225:4;11263:2;11252:9;11248:18;11240:26;;11312:9;11306:4;11302:20;11298:1;11287:9;11283:17;11276:47;11340:131;11466:4;11340:131;:::i;:::-;11332:139;;11059:419;;;:::o;11484:174::-;11624:26;11620:1;11612:6;11608:14;11601:50;11484:174;:::o;11664:366::-;11806:3;11827:67;11891:2;11886:3;11827:67;:::i;:::-;11820:74;;11903:93;11992:3;11903:93;:::i;:::-;12021:2;12016:3;12012:12;12005:19;;11664:366;;;:::o;12036:419::-;12202:4;12240:2;12229:9;12225:18;12217:26;;12289:9;12283:4;12279:20;12275:1;12264:9;12260:17;12253:47;12317:131;12443:4;12317:131;:::i;:::-;12309:139;;12036:419;;;:::o;12461:173::-;12601:25;12597:1;12589:6;12585:14;12578:49;12461:173;:::o;12640:366::-;12782:3;12803:67;12867:2;12862:3;12803:67;:::i;:::-;12796:74;;12879:93;12968:3;12879:93;:::i;:::-;12997:2;12992:3;12988:12;12981:19;;12640:366;;;:::o;13012:419::-;13178:4;13216:2;13205:9;13201:18;13193:26;;13265:9;13259:4;13255:20;13251:1;13240:9;13236:17;13229:47;13293:131;13419:4;13293:131;:::i;:::-;13285:139;;13012:419;;;:::o;13437:305::-;13477:3;13496:20;13514:1;13496:20;:::i;:::-;13491:25;;13530:20;13548:1;13530:20;:::i;:::-;13525:25;;13684:1;13616:66;13612:74;13609:1;13606:81;13603:107;;;13690:18;;:::i;:::-;13603:107;13734:1;13731;13727:9;13720:16;;13437:305;;;;:::o;13748:225::-;13888:34;13884:1;13876:6;13872:14;13865:58;13957:8;13952:2;13944:6;13940:15;13933:33;13748:225;:::o;13979:366::-;14121:3;14142:67;14206:2;14201:3;14142:67;:::i;:::-;14135:74;;14218:93;14307:3;14218:93;:::i;:::-;14336:2;14331:3;14327:12;14320:19;;13979:366;;;:::o;14351:419::-;14517:4;14555:2;14544:9;14540:18;14532:26;;14604:9;14598:4;14594:20;14590:1;14579:9;14575:17;14568:47;14632:131;14758:4;14632:131;:::i;:::-;14624:139;;14351:419;;;:::o;14776:180::-;14824:77;14821:1;14814:88;14921:4;14918:1;14911:15;14945:4;14942:1;14935:15;14962:185;15002:1;15019:20;15037:1;15019:20;:::i;:::-;15014:25;;15053:20;15071:1;15053:20;:::i;:::-;15048:25;;15092:1;15082:35;;15097:18;;:::i;:::-;15082:35;15139:1;15136;15132:9;15127:14;;14962:185;;;;:::o;15153:332::-;15274:4;15312:2;15301:9;15297:18;15289:26;;15325:71;15393:1;15382:9;15378:17;15369:6;15325:71;:::i;:::-;15406:72;15474:2;15463:9;15459:18;15450:6;15406:72;:::i;:::-;15153:332;;;;;:::o;15491:442::-;15640:4;15678:2;15667:9;15663:18;15655:26;;15691:71;15759:1;15748:9;15744:17;15735:6;15691:71;:::i;:::-;15772:72;15840:2;15829:9;15825:18;15816:6;15772:72;:::i;:::-;15854;15922:2;15911:9;15907:18;15898:6;15854:72;:::i;:::-;15491:442;;;;;;:::o;15939:116::-;16009:21;16024:5;16009:21;:::i;:::-;16002:5;15999:32;15989:60;;16045:1;16042;16035:12;15989:60;15939:116;:::o;16061:137::-;16115:5;16146:6;16140:13;16131:22;;16162:30;16186:5;16162:30;:::i;:::-;16061:137;;;;:::o;16204:345::-;16271:6;16320:2;16308:9;16299:7;16295:23;16291:32;16288:119;;;16326:79;;:::i;:::-;16288:119;16446:1;16471:61;16524:7;16515:6;16504:9;16500:22;16471:61;:::i;:::-;16461:71;;16417:125;16204:345;;;;:::o;16555:229::-;16695:34;16691:1;16683:6;16679:14;16672:58;16764:12;16759:2;16751:6;16747:15;16740:37;16555:229;:::o;16790:366::-;16932:3;16953:67;17017:2;17012:3;16953:67;:::i;:::-;16946:74;;17029:93;17118:3;17029:93;:::i;:::-;17147:2;17142:3;17138:12;17131:19;;16790:366;;;:::o;17162:419::-;17328:4;17366:2;17355:9;17351:18;17343:26;;17415:9;17409:4;17405:20;17401:1;17390:9;17386:17;17379:47;17443:131;17569:4;17443:131;:::i;:::-;17435:139;;17162:419;;;:::o;17587:225::-;17727:34;17723:1;17715:6;17711:14;17704:58;17796:8;17791:2;17783:6;17779:15;17772:33;17587:225;:::o;17818:366::-;17960:3;17981:67;18045:2;18040:3;17981:67;:::i;:::-;17974:74;;18057:93;18146:3;18057:93;:::i;:::-;18175:2;18170:3;18166:12;18159:19;;17818:366;;;:::o;18190:419::-;18356:4;18394:2;18383:9;18379:18;18371:26;;18443:9;18437:4;18433:20;18429:1;18418:9;18414:17;18407:47;18471:131;18597:4;18471:131;:::i;:::-;18463:139;;18190:419;;;:::o;18615:179::-;18755:31;18751:1;18743:6;18739:14;18732:55;18615:179;:::o;18800:366::-;18942:3;18963:67;19027:2;19022:3;18963:67;:::i;:::-;18956:74;;19039:93;19128:3;19039:93;:::i;:::-;19157:2;19152:3;19148:12;19141:19;;18800:366;;;:::o;19172:419::-;19338:4;19376:2;19365:9;19361:18;19353:26;;19425:9;19419:4;19415:20;19411:1;19400:9;19396:17;19389:47;19453:131;19579:4;19453:131;:::i;:::-;19445:139;;19172:419;;;:::o;19597:98::-;19648:6;19682:5;19676:12;19666:22;;19597:98;;;:::o;19701:147::-;19802:11;19839:3;19824:18;;19701:147;;;;:::o;19854:307::-;19922:1;19932:113;19946:6;19943:1;19940:13;19932:113;;;20031:1;20026:3;20022:11;20016:18;20012:1;20007:3;20003:11;19996:39;19968:2;19965:1;19961:10;19956:15;;19932:113;;;20063:6;20060:1;20057:13;20054:101;;;20143:1;20134:6;20129:3;20125:16;20118:27;20054:101;19903:258;19854:307;;;:::o;20167:373::-;20271:3;20299:38;20331:5;20299:38;:::i;:::-;20353:88;20434:6;20429:3;20353:88;:::i;:::-;20346:95;;20450:52;20495:6;20490:3;20483:4;20476:5;20472:16;20450:52;:::i;:::-;20527:6;20522:3;20518:16;20511:23;;20275:265;20167:373;;;;:::o;20546:271::-;20676:3;20698:93;20787:3;20778:6;20698:93;:::i;:::-;20691:100;;20808:3;20801:10;;20546:271;;;;:::o;20823:99::-;20875:6;20909:5;20903:12;20893:22;;20823:99;;;:::o;20928:102::-;20969:6;21020:2;21016:7;21011:2;21004:5;21000:14;20996:28;20986:38;;20928:102;;;:::o;21036:364::-;21124:3;21152:39;21185:5;21152:39;:::i;:::-;21207:71;21271:6;21266:3;21207:71;:::i;:::-;21200:78;;21287:52;21332:6;21327:3;21320:4;21313:5;21309:16;21287:52;:::i;:::-;21364:29;21386:6;21364:29;:::i;:::-;21359:3;21355:39;21348:46;;21128:272;21036:364;;;;:::o;21406:313::-;21519:4;21557:2;21546:9;21542:18;21534:26;;21606:9;21600:4;21596:20;21592:1;21581:9;21577:17;21570:47;21634:78;21707:4;21698:6;21634:78;:::i;:::-;21626:86;;21406:313;;;;:::o",
    "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.21 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/// @title StakeBSCM\r\n/// @notice The stake BSCM contract for staking and unstaking BSCM\r\ncontract StakeBSCM is Ownable {\r\n    using SafeERC20 for IERC20;\r\n\r\n    // BSCMemepad Contract Address\r\n    // solhint-disable-next-line var-name-mixedcase\r\n    IERC20 public BSCMemepadContract;\r\n\r\n    // List of Stakers, helpful when fetching stakers report\r\n    address[] public stakers;\r\n\r\n    struct Staker {\r\n        bool isPresent;\r\n        uint256 stakedAt;\r\n        uint256 amount;\r\n    }\r\n\r\n    uint256 public totalBSCMemepadStaked;\r\n    mapping(address => Staker) public stakerInfo;\r\n\r\n    event Stake(address indexed staker, uint256 amount, uint256 stakedAt);\r\n    event UnStake(address indexed unStaker, uint256 amount, uint256 unStakedAt);\r\n\r\n    constructor(IERC20 bscmemepadContractAddress) {\r\n        require(address(bscmemepadContractAddress) != address(0), \"Cannot be address zero\");\r\n        BSCMemepadContract = bscmemepadContractAddress;\r\n    }\r\n\r\n    /**\r\n     * @dev Contract might receive/hold BNB as part of the maintenance process.\r\n     * The receive function is executed on a call to the contract with empty calldata.\r\n     */\r\n    // solhint-disable-next-line no-empty-blocks\r\n    receive() external payable {}\r\n\r\n    /**\r\n     * @dev The fallback function is executed on a call to the contract if\r\n     * none of the other functions match the given function signature.\r\n     */\r\n    fallback() external payable {}\r\n\r\n    /**\r\n     * @dev To stake BSCMemepad in the contract\r\n     *\r\n     * Requirements:\r\n     * - amount must be greater than 0\r\n     * - BSCMemepad balance of Staker must be greater than or equal to amount\r\n     */\r\n    function stake(uint256 amount) public {\r\n        require(amount > 0, \"Stake amount must be > 0\");\r\n        uint256 stakerBSCMBalance = BSCMemepadContract.balanceOf(msg.sender);\r\n        require(stakerBSCMBalance >= amount, \"Caller balance < amount\");\r\n        Staker memory _staker = stakerInfo[msg.sender];\r\n        if (!_staker.isPresent) {\r\n            _staker.isPresent = true;\r\n            stakers.push(msg.sender);\r\n            //solhint-disable-next-line not-rely-on-time\r\n            _staker.stakedAt = block.timestamp;\r\n        }\r\n\r\n        // It implies a staker has already staked then unstaked and now again is staking\r\n        if (_staker.isPresent && (_staker.stakedAt == 0) && (_staker.amount == 0)) {\r\n            //solhint-disable-next-line not-rely-on-time\r\n            _staker.stakedAt = block.timestamp;\r\n        }\r\n\r\n        BSCMemepadContract.safeTransferFrom(msg.sender, address(this), amount);\r\n        totalBSCMemepadStaked += amount;\r\n        _staker.amount += amount;\r\n        stakerInfo[msg.sender] = _staker; // Write Staker info to contract storage\r\n        emit Stake(msg.sender, amount, _staker.stakedAt);\r\n    }\r\n\r\n    /**\r\n     * @dev To unstake BSCMemepad from the contract\r\n     *\r\n     * Requirements:\r\n     * - Caller's staked BSCMemepad must be greater than 0\r\n     * - Unstake amount must be less than or equal to the staked BSCMemepad\r\n     * - Contract's BSCMemepad balance must be greater than staked BSCMemepad\r\n     */\r\n    function unStake(uint256 amount) public {\r\n        require(amount > 0, \"UnStake amount must be > 0\");\r\n\r\n        Staker memory _staker = stakerInfo[msg.sender];\r\n\r\n        uint256 daysStakedFor = stakedDays(_staker.stakedAt);\r\n        require(daysStakedFor >= 7, \"Cannot unstake in cooldown period\");\r\n\r\n        require(_staker.amount > 0, \"No Stakes\");\r\n        require(amount <= _staker.amount, \"Unstake amt > staked amt\");\r\n\r\n        require(BSCMemepadContract.balanceOf(address(this)) >= amount, \"Contract balance < staked BSCMemepad\");\r\n\r\n        _staker.amount -= amount;\r\n        if (_staker.amount == 0) {\r\n            _staker.stakedAt = 0;\r\n        }\r\n\r\n        totalBSCMemepadStaked -= amount;\r\n        stakerInfo[msg.sender] = _staker; // Write Staker info to contract storage\r\n\r\n        BSCMemepadContract.safeTransfer(msg.sender, amount);\r\n\r\n        emit UnStake(msg.sender, amount, block.timestamp); //solhint-disable-line not-rely-on-time\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the caller's staking details\r\n     */\r\n    function myStakes() public view returns (uint256 stakedBSCMemepad, uint256 daysStakedFor) {\r\n        Staker memory _staker = stakerInfo[msg.sender];\r\n        stakedBSCMemepad = _staker.amount;\r\n        if (_staker.stakedAt > 0) {\r\n            daysStakedFor = stakedDays(_staker.stakedAt);\r\n        } else {\r\n            daysStakedFor = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of stakers\r\n     */\r\n    function totalStakers() public view returns (uint256) {\r\n        return stakers.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of days for which BSCMemepad was staked\r\n     */\r\n    function stakedDays(uint256 stakedAt) internal view returns (uint256) {\r\n        //solhint-disable-next-line not-rely-on-time\r\n        return (block.timestamp - stakedAt) / 1 days;\r\n    }\r\n}",
    "sourcePath": "C:\\Users\\rodri\\web3_projects\\deploy-staking\\contracts\\StakeBSCM.sol",
    "ast": {
      "absolutePath": "project:/contracts/StakeBSCM.sol",
      "exportedSymbols": {
        "Address": [
          703
        ],
        "Context": [
          725
        ],
        "IERC20": [
          182
        ],
        "Ownable": [
          104
        ],
        "SafeERC20": [
          406
        ],
        "StakeBSCM": [
          1140
        ]
      },
      "id": 1141,
      "license": "MIT",
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 760,
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.9",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "33:32:6"
        },
        {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "id": 761,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 1141,
          "sourceUnit": 407,
          "src": "69:65:6",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "id": 762,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 1141,
          "sourceUnit": 183,
          "src": "136:56:6",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "id": 763,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 1141,
          "sourceUnit": 105,
          "src": "194:52:6",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 765,
                "name": "Ownable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 104,
                "src": "362:7:6"
              },
              "id": 766,
              "nodeType": "InheritanceSpecifier",
              "src": "362:7:6"
            }
          ],
          "canonicalName": "StakeBSCM",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 764,
            "nodeType": "StructuredDocumentation",
            "src": "250:90:6",
            "text": "@title StakeBSCM\n @notice The stake BSCM contract for staking and unstaking BSCM"
          },
          "fullyImplemented": true,
          "id": 1140,
          "linearizedBaseContracts": [
            1140,
            104,
            725
          ],
          "name": "StakeBSCM",
          "nameLocation": "349:9:6",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "id": 770,
              "libraryName": {
                "id": 767,
                "name": "SafeERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 406,
                "src": "383:9:6"
              },
              "nodeType": "UsingForDirective",
              "src": "377:27:6",
              "typeName": {
                "id": 769,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 768,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 182,
                  "src": "397:6:6"
                },
                "referencedDeclaration": 182,
                "src": "397:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$182",
                  "typeString": "contract IERC20"
                }
              }
            },
            {
              "constant": false,
              "functionSelector": "a3a46c6a",
              "id": 773,
              "mutability": "mutable",
              "name": "BSCMemepadContract",
              "nameLocation": "515:18:6",
              "nodeType": "VariableDeclaration",
              "scope": 1140,
              "src": "501:32:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$182",
                "typeString": "contract IERC20"
              },
              "typeName": {
                "id": 772,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 771,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 182,
                  "src": "501:6:6"
                },
                "referencedDeclaration": 182,
                "src": "501:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$182",
                  "typeString": "contract IERC20"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "fd5e6dd1",
              "id": 776,
              "mutability": "mutable",
              "name": "stakers",
              "nameLocation": "621:7:6",
              "nodeType": "VariableDeclaration",
              "scope": 1140,
              "src": "604:24:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                "typeString": "address[]"
              },
              "typeName": {
                "baseType": {
                  "id": 774,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "604:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 775,
                "nodeType": "ArrayTypeName",
                "src": "604:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              },
              "visibility": "public"
            },
            {
              "canonicalName": "StakeBSCM.Staker",
              "id": 783,
              "members": [
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "isPresent",
                  "nameLocation": "667:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "662:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "stakedAt",
                  "nameLocation": "695:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "687:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "722:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "714:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Staker",
              "nameLocation": "644:6:6",
              "nodeType": "StructDefinition",
              "scope": 1140,
              "src": "637:99:6",
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "f899d5f9",
              "id": 785,
              "mutability": "mutable",
              "name": "totalBSCMemepadStaked",
              "nameLocation": "759:21:6",
              "nodeType": "VariableDeclaration",
              "scope": 1140,
              "src": "744:36:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 784,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "744:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "4e745f1f",
              "id": 790,
              "mutability": "mutable",
              "name": "stakerInfo",
              "nameLocation": "821:10:6",
              "nodeType": "VariableDeclaration",
              "scope": 1140,
              "src": "787:44:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                "typeString": "mapping(address => struct StakeBSCM.Staker)"
              },
              "typeName": {
                "id": 789,
                "keyType": {
                  "id": 786,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "795:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "787:26:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                  "typeString": "mapping(address => struct StakeBSCM.Staker)"
                },
                "valueType": {
                  "id": 788,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 787,
                    "name": "Staker",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 783,
                    "src": "806:6:6"
                  },
                  "referencedDeclaration": 783,
                  "src": "806:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Staker_$783_storage_ptr",
                    "typeString": "struct StakeBSCM.Staker"
                  }
                }
              },
              "visibility": "public"
            },
            {
              "anonymous": false,
              "id": 798,
              "name": "Stake",
              "nameLocation": "846:5:6",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 797,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 792,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "staker",
                    "nameLocation": "868:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 798,
                    "src": "852:22:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 791,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "852:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 794,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "884:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 798,
                    "src": "876:14:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 793,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "876:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 796,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "stakedAt",
                    "nameLocation": "900:8:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 798,
                    "src": "892:16:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 795,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "892:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "851:58:6"
              },
              "src": "840:70:6"
            },
            {
              "anonymous": false,
              "id": 806,
              "name": "UnStake",
              "nameLocation": "922:7:6",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 805,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 800,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "unStaker",
                    "nameLocation": "946:8:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 806,
                    "src": "930:24:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 799,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "930:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 802,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "964:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 806,
                    "src": "956:14:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 801,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "956:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 804,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "unStakedAt",
                    "nameLocation": "980:10:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 806,
                    "src": "972:18:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 803,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "972:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "929:62:6"
              },
              "src": "916:76:6"
            },
            {
              "body": {
                "id": 829,
                "nodeType": "Block",
                "src": "1046:159:6",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 815,
                                "name": "bscmemepadContractAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 809,
                                "src": "1073:25:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$182",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$182",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1065:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 813,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1065:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1065:34:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1111:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1103:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 817,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1103:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1103:10:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1065:48:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "43616e6e6f742062652061646472657373207a65726f",
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1115:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5",
                            "typeString": "literal_string \"Cannot be address zero\""
                          },
                          "value": "Cannot be address zero"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5",
                            "typeString": "literal_string \"Cannot be address zero\""
                          }
                        ],
                        "id": 812,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "1057:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1057:83:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 824,
                    "nodeType": "ExpressionStatement",
                    "src": "1057:83:6"
                  },
                  {
                    "expression": {
                      "id": 827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 825,
                        "name": "BSCMemepadContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "1151:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$182",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 826,
                        "name": "bscmemepadContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "1172:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$182",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "1151:46:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$182",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 828,
                    "nodeType": "ExpressionStatement",
                    "src": "1151:46:6"
                  }
                ]
              },
              "id": 830,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 810,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 809,
                    "mutability": "mutable",
                    "name": "bscmemepadContractAddress",
                    "nameLocation": "1019:25:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 830,
                    "src": "1012:32:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$182",
                      "typeString": "contract IERC20"
                    },
                    "typeName": {
                      "id": 808,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 807,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 182,
                        "src": "1012:6:6"
                      },
                      "referencedDeclaration": 182,
                      "src": "1012:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$182",
                        "typeString": "contract IERC20"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1011:34:6"
              },
              "returnParameters": {
                "id": 811,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1046:0:6"
              },
              "scope": 1140,
              "src": "1000:205:6",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 834,
                "nodeType": "Block",
                "src": "1477:2:6",
                "statements": []
              },
              "documentation": {
                "id": 831,
                "nodeType": "StructuredDocumentation",
                "src": "1213:181:6",
                "text": " @dev Contract might receive/hold BNB as part of the maintenance process.\n The receive function is executed on a call to the contract with empty calldata."
              },
              "id": 835,
              "implemented": true,
              "kind": "receive",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 832,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1457:2:6"
              },
              "returnParameters": {
                "id": 833,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1477:0:6"
              },
              "scope": 1140,
              "src": "1450:29:6",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 839,
                "nodeType": "Block",
                "src": "1681:2:6",
                "statements": []
              },
              "documentation": {
                "id": 836,
                "nodeType": "StructuredDocumentation",
                "src": "1487:160:6",
                "text": " @dev The fallback function is executed on a call to the contract if\n none of the other functions match the given function signature."
              },
              "id": 840,
              "implemented": true,
              "kind": "fallback",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 837,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1661:2:6"
              },
              "returnParameters": {
                "id": 838,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1681:0:6"
              },
              "scope": 1140,
              "src": "1653:30:6",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 961,
                "nodeType": "Block",
                "src": "1945:1106:6",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 847,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 843,
                            "src": "1964:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1973:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1964:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "5374616b6520616d6f756e74206d757374206265203e2030",
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1976:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2",
                            "typeString": "literal_string \"Stake amount must be > 0\""
                          },
                          "value": "Stake amount must be > 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2",
                            "typeString": "literal_string \"Stake amount must be > 0\""
                          }
                        ],
                        "id": 846,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "1956:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1956:47:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 852,
                    "nodeType": "ExpressionStatement",
                    "src": "1956:47:6"
                  },
                  {
                    "assignments": [
                      854
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 854,
                        "mutability": "mutable",
                        "name": "stakerBSCMBalance",
                        "nameLocation": "2022:17:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 961,
                        "src": "2014:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 853,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2014:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 860,
                    "initialValue": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 857,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2071:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2071:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 855,
                          "name": "BSCMemepadContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "2042:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$182",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 121,
                        "src": "2042:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2042:40:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2014:68:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 862,
                            "name": "stakerBSCMBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "2101:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 863,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 843,
                            "src": "2122:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2101:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "43616c6c65722062616c616e6365203c20616d6f756e74",
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2130:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8",
                            "typeString": "literal_string \"Caller balance < amount\""
                          },
                          "value": "Caller balance < amount"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8",
                            "typeString": "literal_string \"Caller balance < amount\""
                          }
                        ],
                        "id": 861,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "2093:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2093:63:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 867,
                    "nodeType": "ExpressionStatement",
                    "src": "2093:63:6"
                  },
                  {
                    "assignments": [
                      870
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 870,
                        "mutability": "mutable",
                        "name": "_staker",
                        "nameLocation": "2181:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 961,
                        "src": "2167:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                          "typeString": "struct StakeBSCM.Staker"
                        },
                        "typeName": {
                          "id": 869,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 868,
                            "name": "Staker",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 783,
                            "src": "2167:6:6"
                          },
                          "referencedDeclaration": 783,
                          "src": "2167:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_storage_ptr",
                            "typeString": "struct StakeBSCM.Staker"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 875,
                    "initialValue": {
                      "baseExpression": {
                        "id": 871,
                        "name": "stakerInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "2191:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                          "typeString": "mapping(address => struct StakeBSCM.Staker storage ref)"
                        }
                      },
                      "id": 874,
                      "indexExpression": {
                        "expression": {
                          "id": 872,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2202:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2202:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2191:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$783_storage",
                        "typeString": "struct StakeBSCM.Staker storage ref"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2167:46:6"
                  },
                  {
                    "condition": {
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "2228:18:6",
                      "subExpression": {
                        "expression": {
                          "id": 876,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 870,
                          "src": "2229:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                            "typeString": "struct StakeBSCM.Staker memory"
                          }
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isPresent",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 778,
                        "src": "2229:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 900,
                    "nodeType": "IfStatement",
                    "src": "2224:221:6",
                    "trueBody": {
                      "id": 899,
                      "nodeType": "Block",
                      "src": "2248:197:6",
                      "statements": [
                        {
                          "expression": {
                            "id": 883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 879,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 870,
                                "src": "2263:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                  "typeString": "struct StakeBSCM.Staker memory"
                                }
                              },
                              "id": 881,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "isPresent",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 778,
                              "src": "2263:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2283:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "2263:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 884,
                          "nodeType": "ExpressionStatement",
                          "src": "2263:24:6"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 888,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2315:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2315:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 885,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "2302:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "push",
                              "nodeType": "MemberAccess",
                              "src": "2302:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                "typeString": "function (address[] storage pointer,address)"
                              }
                            },
                            "id": 890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2302:24:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 891,
                          "nodeType": "ExpressionStatement",
                          "src": "2302:24:6"
                        },
                        {
                          "expression": {
                            "id": 897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 892,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 870,
                                "src": "2399:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                  "typeString": "struct StakeBSCM.Staker memory"
                                }
                              },
                              "id": 894,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "stakedAt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 780,
                              "src": "2399:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 895,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "2418:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2418:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2399:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 898,
                          "nodeType": "ExpressionStatement",
                          "src": "2399:34:6"
                        }
                      ]
                    }
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 901,
                            "name": "_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "2551:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                              "typeString": "struct StakeBSCM.Staker memory"
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isPresent",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 778,
                          "src": "2551:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 903,
                                  "name": "_staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 870,
                                  "src": "2573:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                    "typeString": "struct StakeBSCM.Staker memory"
                                  }
                                },
                                "id": 904,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "stakedAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 780,
                                "src": "2573:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2593:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2573:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 907,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2572:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2551:44:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 909,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 870,
                                "src": "2600:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                  "typeString": "struct StakeBSCM.Staker memory"
                                }
                              },
                              "id": 910,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 782,
                              "src": "2600:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2618:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2600:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 913,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2599:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2551:69:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 923,
                    "nodeType": "IfStatement",
                    "src": "2547:194:6",
                    "trueBody": {
                      "id": 922,
                      "nodeType": "Block",
                      "src": "2622:119:6",
                      "statements": [
                        {
                          "expression": {
                            "id": 920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 915,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 870,
                                "src": "2695:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                  "typeString": "struct StakeBSCM.Staker memory"
                                }
                              },
                              "id": 917,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "stakedAt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 780,
                              "src": "2695:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 918,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "2714:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2714:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2695:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 921,
                          "nodeType": "ExpressionStatement",
                          "src": "2695:34:6"
                        }
                      ]
                    }
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 927,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2789:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2789:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 931,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2809:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakeBSCM_$1140",
                                "typeString": "contract StakeBSCM"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakeBSCM_$1140",
                                "typeString": "contract StakeBSCM"
                              }
                            ],
                            "id": 930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2801:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 929,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2801:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2801:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 933,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "2816:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 924,
                          "name": "BSCMemepadContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "2753:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$182",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 239,
                        "src": "2753:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$182_$",
                          "typeString": "function (contract IERC20,address,address,uint256)"
                        }
                      },
                      "id": 934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2753:70:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 935,
                    "nodeType": "ExpressionStatement",
                    "src": "2753:70:6"
                  },
                  {
                    "expression": {
                      "id": 938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 936,
                        "name": "totalBSCMemepadStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "2834:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "id": 937,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "2859:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2834:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 939,
                    "nodeType": "ExpressionStatement",
                    "src": "2834:31:6"
                  },
                  {
                    "expression": {
                      "id": 944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "id": 940,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 870,
                          "src": "2876:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                            "typeString": "struct StakeBSCM.Staker memory"
                          }
                        },
                        "id": 942,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 782,
                        "src": "2876:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "id": 943,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "2894:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2876:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 945,
                    "nodeType": "ExpressionStatement",
                    "src": "2876:24:6"
                  },
                  {
                    "expression": {
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 946,
                          "name": "stakerInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 790,
                          "src": "2911:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                            "typeString": "mapping(address => struct StakeBSCM.Staker storage ref)"
                          }
                        },
                        "id": 949,
                        "indexExpression": {
                          "expression": {
                            "id": 947,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2922:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2922:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "2911:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_storage",
                          "typeString": "struct StakeBSCM.Staker storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 950,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "2936:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                          "typeString": "struct StakeBSCM.Staker memory"
                        }
                      },
                      "src": "2911:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$783_storage",
                        "typeString": "struct StakeBSCM.Staker storage ref"
                      }
                    },
                    "id": 952,
                    "nodeType": "ExpressionStatement",
                    "src": "2911:32:6"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 954,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3006:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3006:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 956,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "3018:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 957,
                            "name": "_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "3026:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                              "typeString": "struct StakeBSCM.Staker memory"
                            }
                          },
                          "id": 958,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 780,
                          "src": "3026:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 953,
                        "name": "Stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "3000:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256,uint256)"
                        }
                      },
                      "id": 959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3000:43:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 960,
                    "nodeType": "EmitStatement",
                    "src": "2995:48:6"
                  }
                ]
              },
              "documentation": {
                "id": 841,
                "nodeType": "StructuredDocumentation",
                "src": "1691:210:6",
                "text": " @dev To stake BSCMemepad in the contract\n Requirements:\n - amount must be greater than 0\n - BSCMemepad balance of Staker must be greater than or equal to amount"
              },
              "functionSelector": "a694fc3a",
              "id": 962,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "stake",
              "nameLocation": "1916:5:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 844,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 843,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "1930:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 962,
                    "src": "1922:14:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 842,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1922:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1921:16:6"
              },
              "returnParameters": {
                "id": 845,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1945:0:6"
              },
              "scope": 1140,
              "src": "1907:1144:6",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1071,
                "nodeType": "Block",
                "src": "3416:920:6",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 969,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "3435:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3444:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3435:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "556e5374616b6520616d6f756e74206d757374206265203e2030",
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3447:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf",
                            "typeString": "literal_string \"UnStake amount must be > 0\""
                          },
                          "value": "UnStake amount must be > 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf",
                            "typeString": "literal_string \"UnStake amount must be > 0\""
                          }
                        ],
                        "id": 968,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3427:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3427:49:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 974,
                    "nodeType": "ExpressionStatement",
                    "src": "3427:49:6"
                  },
                  {
                    "assignments": [
                      977
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 977,
                        "mutability": "mutable",
                        "name": "_staker",
                        "nameLocation": "3503:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1071,
                        "src": "3489:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                          "typeString": "struct StakeBSCM.Staker"
                        },
                        "typeName": {
                          "id": 976,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 975,
                            "name": "Staker",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 783,
                            "src": "3489:6:6"
                          },
                          "referencedDeclaration": 783,
                          "src": "3489:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_storage_ptr",
                            "typeString": "struct StakeBSCM.Staker"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 982,
                    "initialValue": {
                      "baseExpression": {
                        "id": 978,
                        "name": "stakerInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "3513:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                          "typeString": "mapping(address => struct StakeBSCM.Staker storage ref)"
                        }
                      },
                      "id": 981,
                      "indexExpression": {
                        "expression": {
                          "id": 979,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3524:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3524:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3513:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$783_storage",
                        "typeString": "struct StakeBSCM.Staker storage ref"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3489:46:6"
                  },
                  {
                    "assignments": [
                      984
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "daysStakedFor",
                        "nameLocation": "3556:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1071,
                        "src": "3548:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3548:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 989,
                    "initialValue": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 986,
                            "name": "_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 977,
                            "src": "3583:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                              "typeString": "struct StakeBSCM.Staker memory"
                            }
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 780,
                          "src": "3583:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 985,
                        "name": "stakedDays",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1139,
                        "src": "3572:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3572:28:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3548:52:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 991,
                            "name": "daysStakedFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 984,
                            "src": "3619:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "37",
                            "id": 992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3636:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_7_by_1",
                              "typeString": "int_const 7"
                            },
                            "value": "7"
                          },
                          "src": "3619:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "43616e6e6f7420756e7374616b6520696e20636f6f6c646f776e20706572696f64",
                          "id": 994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3639:35:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4",
                            "typeString": "literal_string \"Cannot unstake in cooldown period\""
                          },
                          "value": "Cannot unstake in cooldown period"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4",
                            "typeString": "literal_string \"Cannot unstake in cooldown period\""
                          }
                        ],
                        "id": 990,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3611:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3611:64:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 996,
                    "nodeType": "ExpressionStatement",
                    "src": "3611:64:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 998,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "3696:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                "typeString": "struct StakeBSCM.Staker memory"
                              }
                            },
                            "id": 999,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 782,
                            "src": "3696:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3713:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3696:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "4e6f205374616b6573",
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3716:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed",
                            "typeString": "literal_string \"No Stakes\""
                          },
                          "value": "No Stakes"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed",
                            "typeString": "literal_string \"No Stakes\""
                          }
                        ],
                        "id": 997,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3688:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3688:40:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1004,
                    "nodeType": "ExpressionStatement",
                    "src": "3688:40:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1006,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "3747:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 1007,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "3757:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                "typeString": "struct StakeBSCM.Staker memory"
                              }
                            },
                            "id": 1008,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 782,
                            "src": "3757:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3747:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "556e7374616b6520616d74203e207374616b656420616d74",
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3773:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b",
                            "typeString": "literal_string \"Unstake amt > staked amt\""
                          },
                          "value": "Unstake amt > staked amt"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b",
                            "typeString": "literal_string \"Unstake amt > staked amt\""
                          }
                        ],
                        "id": 1005,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3739:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3739:61:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1012,
                    "nodeType": "ExpressionStatement",
                    "src": "3739:61:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1018,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "3858:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakeBSCM_$1140",
                                      "typeString": "contract StakeBSCM"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakeBSCM_$1140",
                                      "typeString": "contract StakeBSCM"
                                    }
                                  ],
                                  "id": 1017,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3850:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1016,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3850:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1019,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3850:13:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 1014,
                                "name": "BSCMemepadContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "3821:18:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$182",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 121,
                              "src": "3821:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3821:43:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1021,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "3868:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3821:53:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "436f6e74726163742062616c616e6365203c207374616b6564204253434d656d65706164",
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3876:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116",
                            "typeString": "literal_string \"Contract balance < staked BSCMemepad\""
                          },
                          "value": "Contract balance < staked BSCMemepad"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116",
                            "typeString": "literal_string \"Contract balance < staked BSCMemepad\""
                          }
                        ],
                        "id": 1013,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3813:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3813:102:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1025,
                    "nodeType": "ExpressionStatement",
                    "src": "3813:102:6"
                  },
                  {
                    "expression": {
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "id": 1026,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 977,
                          "src": "3928:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                            "typeString": "struct StakeBSCM.Staker memory"
                          }
                        },
                        "id": 1028,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 782,
                        "src": "3928:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "-=",
                      "rightHandSide": {
                        "id": 1029,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "3946:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3928:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1031,
                    "nodeType": "ExpressionStatement",
                    "src": "3928:24:6"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1032,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 977,
                          "src": "3967:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                            "typeString": "struct StakeBSCM.Staker memory"
                          }
                        },
                        "id": 1033,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 782,
                        "src": "3967:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3985:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3967:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1043,
                    "nodeType": "IfStatement",
                    "src": "3963:72:6",
                    "trueBody": {
                      "id": 1042,
                      "nodeType": "Block",
                      "src": "3988:47:6",
                      "statements": [
                        {
                          "expression": {
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 1036,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 977,
                                "src": "4003:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                  "typeString": "struct StakeBSCM.Staker memory"
                                }
                              },
                              "id": 1038,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "stakedAt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 780,
                              "src": "4003:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 1039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4022:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4003:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1041,
                          "nodeType": "ExpressionStatement",
                          "src": "4003:20:6"
                        }
                      ]
                    }
                  },
                  {
                    "expression": {
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1044,
                        "name": "totalBSCMemepadStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "4047:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "-=",
                      "rightHandSide": {
                        "id": 1045,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "4072:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4047:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1047,
                    "nodeType": "ExpressionStatement",
                    "src": "4047:31:6"
                  },
                  {
                    "expression": {
                      "id": 1053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 1048,
                          "name": "stakerInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 790,
                          "src": "4089:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                            "typeString": "mapping(address => struct StakeBSCM.Staker storage ref)"
                          }
                        },
                        "id": 1051,
                        "indexExpression": {
                          "expression": {
                            "id": 1049,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4100:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4100:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "4089:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_storage",
                          "typeString": "struct StakeBSCM.Staker storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 1052,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "4114:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                          "typeString": "struct StakeBSCM.Staker memory"
                        }
                      },
                      "src": "4089:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$783_storage",
                        "typeString": "struct StakeBSCM.Staker storage ref"
                      }
                    },
                    "id": 1054,
                    "nodeType": "ExpressionStatement",
                    "src": "4089:32:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1058,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4207:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4207:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1060,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 965,
                          "src": "4219:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1055,
                          "name": "BSCMemepadContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "4175:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$182",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 213,
                        "src": "4175:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$182_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4175:51:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1062,
                    "nodeType": "ExpressionStatement",
                    "src": "4175:51:6"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1064,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4252:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4252:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1066,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 965,
                          "src": "4264:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1067,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4272:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4272:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1063,
                        "name": "UnStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "4244:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256,uint256)"
                        }
                      },
                      "id": 1069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4244:44:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1070,
                    "nodeType": "EmitStatement",
                    "src": "4239:49:6"
                  }
                ]
              },
              "documentation": {
                "id": 963,
                "nodeType": "StructuredDocumentation",
                "src": "3059:311:6",
                "text": " @dev To unstake BSCMemepad from the contract\n Requirements:\n - Caller's staked BSCMemepad must be greater than 0\n - Unstake amount must be less than or equal to the staked BSCMemepad\n - Contract's BSCMemepad balance must be greater than staked BSCMemepad"
              },
              "functionSelector": "5d3eea91",
              "id": 1072,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "unStake",
              "nameLocation": "3385:7:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 966,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 965,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "3401:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1072,
                    "src": "3393:14:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 964,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3393:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3392:16:6"
              },
              "returnParameters": {
                "id": 967,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3416:0:6"
              },
              "scope": 1140,
              "src": "3376:960:6",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1111,
                "nodeType": "Block",
                "src": "4502:266:6",
                "statements": [
                  {
                    "assignments": [
                      1082
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1082,
                        "mutability": "mutable",
                        "name": "_staker",
                        "nameLocation": "4527:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1111,
                        "src": "4513:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                          "typeString": "struct StakeBSCM.Staker"
                        },
                        "typeName": {
                          "id": 1081,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1080,
                            "name": "Staker",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 783,
                            "src": "4513:6:6"
                          },
                          "referencedDeclaration": 783,
                          "src": "4513:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_storage_ptr",
                            "typeString": "struct StakeBSCM.Staker"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1087,
                    "initialValue": {
                      "baseExpression": {
                        "id": 1083,
                        "name": "stakerInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "4537:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                          "typeString": "mapping(address => struct StakeBSCM.Staker storage ref)"
                        }
                      },
                      "id": 1086,
                      "indexExpression": {
                        "expression": {
                          "id": 1084,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4548:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4548:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4537:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$783_storage",
                        "typeString": "struct StakeBSCM.Staker storage ref"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4513:46:6"
                  },
                  {
                    "expression": {
                      "id": 1091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1088,
                        "name": "stakedBSCMemepad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "4570:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "expression": {
                          "id": 1089,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1082,
                          "src": "4589:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                            "typeString": "struct StakeBSCM.Staker memory"
                          }
                        },
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 782,
                        "src": "4589:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4570:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1092,
                    "nodeType": "ExpressionStatement",
                    "src": "4570:33:6"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1093,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1082,
                          "src": "4618:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                            "typeString": "struct StakeBSCM.Staker memory"
                          }
                        },
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 780,
                        "src": "4618:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4637:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4618:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1109,
                      "nodeType": "Block",
                      "src": "4717:44:6",
                      "statements": [
                        {
                          "expression": {
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1105,
                              "name": "daysStakedFor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "4732:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 1106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4748:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4732:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1108,
                          "nodeType": "ExpressionStatement",
                          "src": "4732:17:6"
                        }
                      ]
                    },
                    "id": 1110,
                    "nodeType": "IfStatement",
                    "src": "4614:147:6",
                    "trueBody": {
                      "id": 1104,
                      "nodeType": "Block",
                      "src": "4640:71:6",
                      "statements": [
                        {
                          "expression": {
                            "id": 1102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1097,
                              "name": "daysStakedFor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "4655:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1099,
                                    "name": "_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1082,
                                    "src": "4682:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                      "typeString": "struct StakeBSCM.Staker memory"
                                    }
                                  },
                                  "id": 1100,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stakedAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 780,
                                  "src": "4682:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1098,
                                "name": "stakedDays",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1139,
                                "src": "4671:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view returns (uint256)"
                                }
                              },
                              "id": 1101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4671:28:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4655:44:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1103,
                          "nodeType": "ExpressionStatement",
                          "src": "4655:44:6"
                        }
                      ]
                    }
                  }
                ]
              },
              "documentation": {
                "id": 1073,
                "nodeType": "StructuredDocumentation",
                "src": "4344:62:6",
                "text": " @dev Returns the caller's staking details"
              },
              "functionSelector": "71bb3d01",
              "id": 1112,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "myStakes",
              "nameLocation": "4421:8:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1074,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "4429:2:6"
              },
              "returnParameters": {
                "id": 1079,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1076,
                    "mutability": "mutable",
                    "name": "stakedBSCMemepad",
                    "nameLocation": "4461:16:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1112,
                    "src": "4453:24:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1075,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4453:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1078,
                    "mutability": "mutable",
                    "name": "daysStakedFor",
                    "nameLocation": "4487:13:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1112,
                    "src": "4479:21:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1077,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4479:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4452:49:6"
              },
              "scope": 1140,
              "src": "4412:356:6",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1121,
                "nodeType": "Block",
                "src": "4897:40:6",
                "statements": [
                  {
                    "expression": {
                      "expression": {
                        "id": 1118,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "4915:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4915:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1117,
                    "id": 1120,
                    "nodeType": "Return",
                    "src": "4908:21:6"
                  }
                ]
              },
              "documentation": {
                "id": 1113,
                "nodeType": "StructuredDocumentation",
                "src": "4776:61:6",
                "text": " @dev Returns the total number of stakers"
              },
              "functionSelector": "86989038",
              "id": 1122,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "totalStakers",
              "nameLocation": "4852:12:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1114,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "4864:2:6"
              },
              "returnParameters": {
                "id": 1117,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1116,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1122,
                    "src": "4888:7:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1115,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4888:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4887:9:6"
              },
              "scope": 1140,
              "src": "4843:94:6",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1138,
                "nodeType": "Block",
                "src": "5105:117:6",
                "statements": [
                  {
                    "expression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1130,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "5178:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5178:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1132,
                              "name": "stakedAt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1125,
                              "src": "5196:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5178:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1134,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5177:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5208:6:6",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      },
                      "src": "5177:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1129,
                    "id": 1137,
                    "nodeType": "Return",
                    "src": "5170:44:6"
                  }
                ]
              },
              "documentation": {
                "id": 1123,
                "nodeType": "StructuredDocumentation",
                "src": "4945:84:6",
                "text": " @dev Returns the number of days for which BSCMemepad was staked"
              },
              "id": 1139,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "stakedDays",
              "nameLocation": "5044:10:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1126,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1125,
                    "mutability": "mutable",
                    "name": "stakedAt",
                    "nameLocation": "5063:8:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1139,
                    "src": "5055:16:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1124,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5055:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5054:18:6"
              },
              "returnParameters": {
                "id": 1129,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1128,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1139,
                    "src": "5096:7:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1127,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5096:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5095:9:6"
              },
              "scope": 1140,
              "src": "5035:187:6",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            }
          ],
          "scope": 1141,
          "src": "340:4885:6",
          "usedErrors": []
        }
      ],
      "src": "33:5192:6"
    },
    "legacyAST": {
      "absolutePath": "project:/contracts/StakeBSCM.sol",
      "exportedSymbols": {
        "Address": [
          703
        ],
        "Context": [
          725
        ],
        "IERC20": [
          182
        ],
        "Ownable": [
          104
        ],
        "SafeERC20": [
          406
        ],
        "StakeBSCM": [
          1140
        ]
      },
      "id": 1141,
      "license": "MIT",
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 760,
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.9",
            ".0"
          ],
          "nodeType": "PragmaDirective",
          "src": "33:32:6"
        },
        {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
          "id": 761,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 1141,
          "sourceUnit": 407,
          "src": "69:65:6",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "id": 762,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 1141,
          "sourceUnit": 183,
          "src": "136:56:6",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "id": 763,
          "nameLocation": "-1:-1:-1",
          "nodeType": "ImportDirective",
          "scope": 1141,
          "sourceUnit": 105,
          "src": "194:52:6",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "abstract": false,
          "baseContracts": [
            {
              "baseName": {
                "id": 765,
                "name": "Ownable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 104,
                "src": "362:7:6"
              },
              "id": 766,
              "nodeType": "InheritanceSpecifier",
              "src": "362:7:6"
            }
          ],
          "canonicalName": "StakeBSCM",
          "contractDependencies": [],
          "contractKind": "contract",
          "documentation": {
            "id": 764,
            "nodeType": "StructuredDocumentation",
            "src": "250:90:6",
            "text": "@title StakeBSCM\n @notice The stake BSCM contract for staking and unstaking BSCM"
          },
          "fullyImplemented": true,
          "id": 1140,
          "linearizedBaseContracts": [
            1140,
            104,
            725
          ],
          "name": "StakeBSCM",
          "nameLocation": "349:9:6",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "id": 770,
              "libraryName": {
                "id": 767,
                "name": "SafeERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 406,
                "src": "383:9:6"
              },
              "nodeType": "UsingForDirective",
              "src": "377:27:6",
              "typeName": {
                "id": 769,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 768,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 182,
                  "src": "397:6:6"
                },
                "referencedDeclaration": 182,
                "src": "397:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$182",
                  "typeString": "contract IERC20"
                }
              }
            },
            {
              "constant": false,
              "functionSelector": "a3a46c6a",
              "id": 773,
              "mutability": "mutable",
              "name": "BSCMemepadContract",
              "nameLocation": "515:18:6",
              "nodeType": "VariableDeclaration",
              "scope": 1140,
              "src": "501:32:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$182",
                "typeString": "contract IERC20"
              },
              "typeName": {
                "id": 772,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 771,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 182,
                  "src": "501:6:6"
                },
                "referencedDeclaration": 182,
                "src": "501:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$182",
                  "typeString": "contract IERC20"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "fd5e6dd1",
              "id": 776,
              "mutability": "mutable",
              "name": "stakers",
              "nameLocation": "621:7:6",
              "nodeType": "VariableDeclaration",
              "scope": 1140,
              "src": "604:24:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                "typeString": "address[]"
              },
              "typeName": {
                "baseType": {
                  "id": 774,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "604:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 775,
                "nodeType": "ArrayTypeName",
                "src": "604:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              },
              "visibility": "public"
            },
            {
              "canonicalName": "StakeBSCM.Staker",
              "id": 783,
              "members": [
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "isPresent",
                  "nameLocation": "667:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "662:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "stakedAt",
                  "nameLocation": "695:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "687:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "722:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 783,
                  "src": "714:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "Staker",
              "nameLocation": "644:6:6",
              "nodeType": "StructDefinition",
              "scope": 1140,
              "src": "637:99:6",
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "f899d5f9",
              "id": 785,
              "mutability": "mutable",
              "name": "totalBSCMemepadStaked",
              "nameLocation": "759:21:6",
              "nodeType": "VariableDeclaration",
              "scope": 1140,
              "src": "744:36:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 784,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "744:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "functionSelector": "4e745f1f",
              "id": 790,
              "mutability": "mutable",
              "name": "stakerInfo",
              "nameLocation": "821:10:6",
              "nodeType": "VariableDeclaration",
              "scope": 1140,
              "src": "787:44:6",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                "typeString": "mapping(address => struct StakeBSCM.Staker)"
              },
              "typeName": {
                "id": 789,
                "keyType": {
                  "id": 786,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "795:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "787:26:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                  "typeString": "mapping(address => struct StakeBSCM.Staker)"
                },
                "valueType": {
                  "id": 788,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 787,
                    "name": "Staker",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 783,
                    "src": "806:6:6"
                  },
                  "referencedDeclaration": 783,
                  "src": "806:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Staker_$783_storage_ptr",
                    "typeString": "struct StakeBSCM.Staker"
                  }
                }
              },
              "visibility": "public"
            },
            {
              "anonymous": false,
              "id": 798,
              "name": "Stake",
              "nameLocation": "846:5:6",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 797,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 792,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "staker",
                    "nameLocation": "868:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 798,
                    "src": "852:22:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 791,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "852:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 794,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "884:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 798,
                    "src": "876:14:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 793,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "876:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 796,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "stakedAt",
                    "nameLocation": "900:8:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 798,
                    "src": "892:16:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 795,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "892:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "851:58:6"
              },
              "src": "840:70:6"
            },
            {
              "anonymous": false,
              "id": 806,
              "name": "UnStake",
              "nameLocation": "922:7:6",
              "nodeType": "EventDefinition",
              "parameters": {
                "id": 805,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 800,
                    "indexed": true,
                    "mutability": "mutable",
                    "name": "unStaker",
                    "nameLocation": "946:8:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 806,
                    "src": "930:24:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 799,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "930:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 802,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "964:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 806,
                    "src": "956:14:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 801,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "956:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 804,
                    "indexed": false,
                    "mutability": "mutable",
                    "name": "unStakedAt",
                    "nameLocation": "980:10:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 806,
                    "src": "972:18:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 803,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "972:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "929:62:6"
              },
              "src": "916:76:6"
            },
            {
              "body": {
                "id": 829,
                "nodeType": "Block",
                "src": "1046:159:6",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 815,
                                "name": "bscmemepadContractAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 809,
                                "src": "1073:25:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$182",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$182",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1065:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 813,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1065:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1065:34:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1111:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1103:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 817,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1103:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1103:10:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1065:48:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "43616e6e6f742062652061646472657373207a65726f",
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1115:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5",
                            "typeString": "literal_string \"Cannot be address zero\""
                          },
                          "value": "Cannot be address zero"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_e6f1d5ec3ac4254c3cfd12521c76d72ce0914c1177b5314af630a89e354590d5",
                            "typeString": "literal_string \"Cannot be address zero\""
                          }
                        ],
                        "id": 812,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "1057:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1057:83:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 824,
                    "nodeType": "ExpressionStatement",
                    "src": "1057:83:6"
                  },
                  {
                    "expression": {
                      "id": 827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 825,
                        "name": "BSCMemepadContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "1151:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$182",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 826,
                        "name": "bscmemepadContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 809,
                        "src": "1172:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$182",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "1151:46:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$182",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 828,
                    "nodeType": "ExpressionStatement",
                    "src": "1151:46:6"
                  }
                ]
              },
              "id": 830,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 810,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 809,
                    "mutability": "mutable",
                    "name": "bscmemepadContractAddress",
                    "nameLocation": "1019:25:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 830,
                    "src": "1012:32:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$182",
                      "typeString": "contract IERC20"
                    },
                    "typeName": {
                      "id": 808,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 807,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 182,
                        "src": "1012:6:6"
                      },
                      "referencedDeclaration": 182,
                      "src": "1012:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$182",
                        "typeString": "contract IERC20"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1011:34:6"
              },
              "returnParameters": {
                "id": 811,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1046:0:6"
              },
              "scope": 1140,
              "src": "1000:205:6",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 834,
                "nodeType": "Block",
                "src": "1477:2:6",
                "statements": []
              },
              "documentation": {
                "id": 831,
                "nodeType": "StructuredDocumentation",
                "src": "1213:181:6",
                "text": " @dev Contract might receive/hold BNB as part of the maintenance process.\n The receive function is executed on a call to the contract with empty calldata."
              },
              "id": 835,
              "implemented": true,
              "kind": "receive",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 832,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1457:2:6"
              },
              "returnParameters": {
                "id": 833,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1477:0:6"
              },
              "scope": 1140,
              "src": "1450:29:6",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 839,
                "nodeType": "Block",
                "src": "1681:2:6",
                "statements": []
              },
              "documentation": {
                "id": 836,
                "nodeType": "StructuredDocumentation",
                "src": "1487:160:6",
                "text": " @dev The fallback function is executed on a call to the contract if\n none of the other functions match the given function signature."
              },
              "id": 840,
              "implemented": true,
              "kind": "fallback",
              "modifiers": [],
              "name": "",
              "nameLocation": "-1:-1:-1",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 837,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1661:2:6"
              },
              "returnParameters": {
                "id": 838,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1681:0:6"
              },
              "scope": 1140,
              "src": "1653:30:6",
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            {
              "body": {
                "id": 961,
                "nodeType": "Block",
                "src": "1945:1106:6",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 847,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 843,
                            "src": "1964:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1973:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1964:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "5374616b6520616d6f756e74206d757374206265203e2030",
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1976:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2",
                            "typeString": "literal_string \"Stake amount must be > 0\""
                          },
                          "value": "Stake amount must be > 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_fcf941eeca6ead1d39f27ad81df77be13ff33174fc7a431bdb2a99cee20f50d2",
                            "typeString": "literal_string \"Stake amount must be > 0\""
                          }
                        ],
                        "id": 846,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "1956:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1956:47:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 852,
                    "nodeType": "ExpressionStatement",
                    "src": "1956:47:6"
                  },
                  {
                    "assignments": [
                      854
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 854,
                        "mutability": "mutable",
                        "name": "stakerBSCMBalance",
                        "nameLocation": "2022:17:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 961,
                        "src": "2014:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 853,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2014:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 860,
                    "initialValue": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 857,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2071:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2071:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 855,
                          "name": "BSCMemepadContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "2042:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$182",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 121,
                        "src": "2042:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2042:40:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2014:68:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 862,
                            "name": "stakerBSCMBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "2101:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 863,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 843,
                            "src": "2122:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2101:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "43616c6c65722062616c616e6365203c20616d6f756e74",
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2130:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8",
                            "typeString": "literal_string \"Caller balance < amount\""
                          },
                          "value": "Caller balance < amount"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ea15fff7e213fedcd894a27886105e702c1f2bdb7c830c6875e283f054cfede8",
                            "typeString": "literal_string \"Caller balance < amount\""
                          }
                        ],
                        "id": 861,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "2093:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2093:63:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 867,
                    "nodeType": "ExpressionStatement",
                    "src": "2093:63:6"
                  },
                  {
                    "assignments": [
                      870
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 870,
                        "mutability": "mutable",
                        "name": "_staker",
                        "nameLocation": "2181:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 961,
                        "src": "2167:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                          "typeString": "struct StakeBSCM.Staker"
                        },
                        "typeName": {
                          "id": 869,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 868,
                            "name": "Staker",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 783,
                            "src": "2167:6:6"
                          },
                          "referencedDeclaration": 783,
                          "src": "2167:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_storage_ptr",
                            "typeString": "struct StakeBSCM.Staker"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 875,
                    "initialValue": {
                      "baseExpression": {
                        "id": 871,
                        "name": "stakerInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "2191:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                          "typeString": "mapping(address => struct StakeBSCM.Staker storage ref)"
                        }
                      },
                      "id": 874,
                      "indexExpression": {
                        "expression": {
                          "id": 872,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2202:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2202:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2191:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$783_storage",
                        "typeString": "struct StakeBSCM.Staker storage ref"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2167:46:6"
                  },
                  {
                    "condition": {
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "2228:18:6",
                      "subExpression": {
                        "expression": {
                          "id": 876,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 870,
                          "src": "2229:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                            "typeString": "struct StakeBSCM.Staker memory"
                          }
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isPresent",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 778,
                        "src": "2229:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 900,
                    "nodeType": "IfStatement",
                    "src": "2224:221:6",
                    "trueBody": {
                      "id": 899,
                      "nodeType": "Block",
                      "src": "2248:197:6",
                      "statements": [
                        {
                          "expression": {
                            "id": 883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 879,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 870,
                                "src": "2263:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                  "typeString": "struct StakeBSCM.Staker memory"
                                }
                              },
                              "id": 881,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "isPresent",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 778,
                              "src": "2263:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2283:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "2263:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 884,
                          "nodeType": "ExpressionStatement",
                          "src": "2263:24:6"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 888,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2315:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2315:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 885,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 776,
                                "src": "2302:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "push",
                              "nodeType": "MemberAccess",
                              "src": "2302:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                "typeString": "function (address[] storage pointer,address)"
                              }
                            },
                            "id": 890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2302:24:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 891,
                          "nodeType": "ExpressionStatement",
                          "src": "2302:24:6"
                        },
                        {
                          "expression": {
                            "id": 897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 892,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 870,
                                "src": "2399:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                  "typeString": "struct StakeBSCM.Staker memory"
                                }
                              },
                              "id": 894,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "stakedAt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 780,
                              "src": "2399:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 895,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "2418:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2418:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2399:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 898,
                          "nodeType": "ExpressionStatement",
                          "src": "2399:34:6"
                        }
                      ]
                    }
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 901,
                            "name": "_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "2551:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                              "typeString": "struct StakeBSCM.Staker memory"
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isPresent",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 778,
                          "src": "2551:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 903,
                                  "name": "_staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 870,
                                  "src": "2573:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                    "typeString": "struct StakeBSCM.Staker memory"
                                  }
                                },
                                "id": 904,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "stakedAt",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 780,
                                "src": "2573:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2593:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2573:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 907,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2572:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2551:44:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 909,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 870,
                                "src": "2600:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                  "typeString": "struct StakeBSCM.Staker memory"
                                }
                              },
                              "id": 910,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 782,
                              "src": "2600:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2618:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2600:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 913,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2599:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2551:69:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 923,
                    "nodeType": "IfStatement",
                    "src": "2547:194:6",
                    "trueBody": {
                      "id": 922,
                      "nodeType": "Block",
                      "src": "2622:119:6",
                      "statements": [
                        {
                          "expression": {
                            "id": 920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 915,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 870,
                                "src": "2695:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                  "typeString": "struct StakeBSCM.Staker memory"
                                }
                              },
                              "id": 917,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "stakedAt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 780,
                              "src": "2695:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 918,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "2714:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2714:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2695:34:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 921,
                          "nodeType": "ExpressionStatement",
                          "src": "2695:34:6"
                        }
                      ]
                    }
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 927,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2789:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2789:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 931,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2809:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakeBSCM_$1140",
                                "typeString": "contract StakeBSCM"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakeBSCM_$1140",
                                "typeString": "contract StakeBSCM"
                              }
                            ],
                            "id": 930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2801:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 929,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2801:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2801:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 933,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "2816:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 924,
                          "name": "BSCMemepadContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "2753:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$182",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 239,
                        "src": "2753:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$182_$",
                          "typeString": "function (contract IERC20,address,address,uint256)"
                        }
                      },
                      "id": 934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2753:70:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 935,
                    "nodeType": "ExpressionStatement",
                    "src": "2753:70:6"
                  },
                  {
                    "expression": {
                      "id": 938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 936,
                        "name": "totalBSCMemepadStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "2834:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "id": 937,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "2859:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2834:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 939,
                    "nodeType": "ExpressionStatement",
                    "src": "2834:31:6"
                  },
                  {
                    "expression": {
                      "id": 944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "id": 940,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 870,
                          "src": "2876:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                            "typeString": "struct StakeBSCM.Staker memory"
                          }
                        },
                        "id": 942,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 782,
                        "src": "2876:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "id": 943,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "2894:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2876:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 945,
                    "nodeType": "ExpressionStatement",
                    "src": "2876:24:6"
                  },
                  {
                    "expression": {
                      "id": 951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 946,
                          "name": "stakerInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 790,
                          "src": "2911:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                            "typeString": "mapping(address => struct StakeBSCM.Staker storage ref)"
                          }
                        },
                        "id": 949,
                        "indexExpression": {
                          "expression": {
                            "id": 947,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2922:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2922:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "2911:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_storage",
                          "typeString": "struct StakeBSCM.Staker storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 950,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 870,
                        "src": "2936:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                          "typeString": "struct StakeBSCM.Staker memory"
                        }
                      },
                      "src": "2911:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$783_storage",
                        "typeString": "struct StakeBSCM.Staker storage ref"
                      }
                    },
                    "id": 952,
                    "nodeType": "ExpressionStatement",
                    "src": "2911:32:6"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 954,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3006:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3006:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 956,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "3018:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 957,
                            "name": "_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "3026:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                              "typeString": "struct StakeBSCM.Staker memory"
                            }
                          },
                          "id": 958,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 780,
                          "src": "3026:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 953,
                        "name": "Stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "3000:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256,uint256)"
                        }
                      },
                      "id": 959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3000:43:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 960,
                    "nodeType": "EmitStatement",
                    "src": "2995:48:6"
                  }
                ]
              },
              "documentation": {
                "id": 841,
                "nodeType": "StructuredDocumentation",
                "src": "1691:210:6",
                "text": " @dev To stake BSCMemepad in the contract\n Requirements:\n - amount must be greater than 0\n - BSCMemepad balance of Staker must be greater than or equal to amount"
              },
              "functionSelector": "a694fc3a",
              "id": 962,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "stake",
              "nameLocation": "1916:5:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 844,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 843,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "1930:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 962,
                    "src": "1922:14:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 842,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1922:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "1921:16:6"
              },
              "returnParameters": {
                "id": 845,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "1945:0:6"
              },
              "scope": 1140,
              "src": "1907:1144:6",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1071,
                "nodeType": "Block",
                "src": "3416:920:6",
                "statements": [
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 969,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "3435:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3444:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3435:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "556e5374616b6520616d6f756e74206d757374206265203e2030",
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3447:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf",
                            "typeString": "literal_string \"UnStake amount must be > 0\""
                          },
                          "value": "UnStake amount must be > 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d26e6d35b5421c1c00a986f95f9d93b758c1c23977c68030d7ad8c6324cfc4bf",
                            "typeString": "literal_string \"UnStake amount must be > 0\""
                          }
                        ],
                        "id": 968,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3427:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3427:49:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 974,
                    "nodeType": "ExpressionStatement",
                    "src": "3427:49:6"
                  },
                  {
                    "assignments": [
                      977
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 977,
                        "mutability": "mutable",
                        "name": "_staker",
                        "nameLocation": "3503:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1071,
                        "src": "3489:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                          "typeString": "struct StakeBSCM.Staker"
                        },
                        "typeName": {
                          "id": 976,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 975,
                            "name": "Staker",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 783,
                            "src": "3489:6:6"
                          },
                          "referencedDeclaration": 783,
                          "src": "3489:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_storage_ptr",
                            "typeString": "struct StakeBSCM.Staker"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 982,
                    "initialValue": {
                      "baseExpression": {
                        "id": 978,
                        "name": "stakerInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "3513:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                          "typeString": "mapping(address => struct StakeBSCM.Staker storage ref)"
                        }
                      },
                      "id": 981,
                      "indexExpression": {
                        "expression": {
                          "id": 979,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3524:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3524:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3513:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$783_storage",
                        "typeString": "struct StakeBSCM.Staker storage ref"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3489:46:6"
                  },
                  {
                    "assignments": [
                      984
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "daysStakedFor",
                        "nameLocation": "3556:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1071,
                        "src": "3548:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3548:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 989,
                    "initialValue": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 986,
                            "name": "_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 977,
                            "src": "3583:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                              "typeString": "struct StakeBSCM.Staker memory"
                            }
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakedAt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 780,
                          "src": "3583:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 985,
                        "name": "stakedDays",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1139,
                        "src": "3572:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3572:28:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3548:52:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 991,
                            "name": "daysStakedFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 984,
                            "src": "3619:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "37",
                            "id": 992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3636:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_7_by_1",
                              "typeString": "int_const 7"
                            },
                            "value": "7"
                          },
                          "src": "3619:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "43616e6e6f7420756e7374616b6520696e20636f6f6c646f776e20706572696f64",
                          "id": 994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3639:35:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4",
                            "typeString": "literal_string \"Cannot unstake in cooldown period\""
                          },
                          "value": "Cannot unstake in cooldown period"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_16064f896419bd3d07d09364bbd3acd13403e7a150a445f4eea16eaa67bc36c4",
                            "typeString": "literal_string \"Cannot unstake in cooldown period\""
                          }
                        ],
                        "id": 990,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3611:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3611:64:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 996,
                    "nodeType": "ExpressionStatement",
                    "src": "3611:64:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 998,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "3696:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                "typeString": "struct StakeBSCM.Staker memory"
                              }
                            },
                            "id": 999,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 782,
                            "src": "3696:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3713:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3696:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "4e6f205374616b6573",
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3716:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed",
                            "typeString": "literal_string \"No Stakes\""
                          },
                          "value": "No Stakes"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_b3a4a857c7ff0740197ba421d30297d155bb14f2edbd50ccb4f0a21512a69bed",
                            "typeString": "literal_string \"No Stakes\""
                          }
                        ],
                        "id": 997,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3688:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3688:40:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1004,
                    "nodeType": "ExpressionStatement",
                    "src": "3688:40:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1006,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "3747:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 1007,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 977,
                              "src": "3757:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                "typeString": "struct StakeBSCM.Staker memory"
                              }
                            },
                            "id": 1008,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 782,
                            "src": "3757:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3747:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "556e7374616b6520616d74203e207374616b656420616d74",
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3773:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b",
                            "typeString": "literal_string \"Unstake amt > staked amt\""
                          },
                          "value": "Unstake amt > staked amt"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_661fa947160a51d3d31b5c6a6fe940d3478c2cfe14f7faec5ab41d52c490b86b",
                            "typeString": "literal_string \"Unstake amt > staked amt\""
                          }
                        ],
                        "id": 1005,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3739:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3739:61:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1012,
                    "nodeType": "ExpressionStatement",
                    "src": "3739:61:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1018,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "3858:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakeBSCM_$1140",
                                      "typeString": "contract StakeBSCM"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakeBSCM_$1140",
                                      "typeString": "contract StakeBSCM"
                                    }
                                  ],
                                  "id": 1017,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3850:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1016,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3850:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1019,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3850:13:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 1014,
                                "name": "BSCMemepadContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "3821:18:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$182",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 121,
                              "src": "3821:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3821:43:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1021,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "3868:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3821:53:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "436f6e74726163742062616c616e6365203c207374616b6564204253434d656d65706164",
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3876:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116",
                            "typeString": "literal_string \"Contract balance < staked BSCMemepad\""
                          },
                          "value": "Contract balance < staked BSCMemepad"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_38f88ddc94c322d0e37a40f71912db1342cf0ef7349d228cce8361236a519116",
                            "typeString": "literal_string \"Contract balance < staked BSCMemepad\""
                          }
                        ],
                        "id": 1013,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "3813:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3813:102:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1025,
                    "nodeType": "ExpressionStatement",
                    "src": "3813:102:6"
                  },
                  {
                    "expression": {
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "id": 1026,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 977,
                          "src": "3928:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                            "typeString": "struct StakeBSCM.Staker memory"
                          }
                        },
                        "id": 1028,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 782,
                        "src": "3928:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "-=",
                      "rightHandSide": {
                        "id": 1029,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "3946:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3928:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1031,
                    "nodeType": "ExpressionStatement",
                    "src": "3928:24:6"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1032,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 977,
                          "src": "3967:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                            "typeString": "struct StakeBSCM.Staker memory"
                          }
                        },
                        "id": 1033,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 782,
                        "src": "3967:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3985:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3967:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1043,
                    "nodeType": "IfStatement",
                    "src": "3963:72:6",
                    "trueBody": {
                      "id": 1042,
                      "nodeType": "Block",
                      "src": "3988:47:6",
                      "statements": [
                        {
                          "expression": {
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "expression": {
                                "id": 1036,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 977,
                                "src": "4003:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                  "typeString": "struct StakeBSCM.Staker memory"
                                }
                              },
                              "id": 1038,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "stakedAt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 780,
                              "src": "4003:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 1039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4022:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4003:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1041,
                          "nodeType": "ExpressionStatement",
                          "src": "4003:20:6"
                        }
                      ]
                    }
                  },
                  {
                    "expression": {
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1044,
                        "name": "totalBSCMemepadStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "4047:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "-=",
                      "rightHandSide": {
                        "id": 1045,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "4072:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4047:31:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1047,
                    "nodeType": "ExpressionStatement",
                    "src": "4047:31:6"
                  },
                  {
                    "expression": {
                      "id": 1053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "baseExpression": {
                          "id": 1048,
                          "name": "stakerInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 790,
                          "src": "4089:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                            "typeString": "mapping(address => struct StakeBSCM.Staker storage ref)"
                          }
                        },
                        "id": 1051,
                        "indexExpression": {
                          "expression": {
                            "id": 1049,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4100:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4100:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "nodeType": "IndexAccess",
                        "src": "4089:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_storage",
                          "typeString": "struct StakeBSCM.Staker storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 1052,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "4114:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                          "typeString": "struct StakeBSCM.Staker memory"
                        }
                      },
                      "src": "4089:32:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$783_storage",
                        "typeString": "struct StakeBSCM.Staker storage ref"
                      }
                    },
                    "id": 1054,
                    "nodeType": "ExpressionStatement",
                    "src": "4089:32:6"
                  },
                  {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1058,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4207:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4207:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1060,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 965,
                          "src": "4219:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1055,
                          "name": "BSCMemepadContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 773,
                          "src": "4175:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$182",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 213,
                        "src": "4175:31:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$182_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$182_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 1061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4175:51:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1062,
                    "nodeType": "ExpressionStatement",
                    "src": "4175:51:6"
                  },
                  {
                    "eventCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1064,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4252:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4252:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1066,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 965,
                          "src": "4264:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1067,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4272:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4272:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1063,
                        "name": "UnStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 806,
                        "src": "4244:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256,uint256)"
                        }
                      },
                      "id": 1069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4244:44:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1070,
                    "nodeType": "EmitStatement",
                    "src": "4239:49:6"
                  }
                ]
              },
              "documentation": {
                "id": 963,
                "nodeType": "StructuredDocumentation",
                "src": "3059:311:6",
                "text": " @dev To unstake BSCMemepad from the contract\n Requirements:\n - Caller's staked BSCMemepad must be greater than 0\n - Unstake amount must be less than or equal to the staked BSCMemepad\n - Contract's BSCMemepad balance must be greater than staked BSCMemepad"
              },
              "functionSelector": "5d3eea91",
              "id": 1072,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "unStake",
              "nameLocation": "3385:7:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 966,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 965,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "3401:6:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1072,
                    "src": "3393:14:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 964,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3393:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "3392:16:6"
              },
              "returnParameters": {
                "id": 967,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "3416:0:6"
              },
              "scope": 1140,
              "src": "3376:960:6",
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1111,
                "nodeType": "Block",
                "src": "4502:266:6",
                "statements": [
                  {
                    "assignments": [
                      1082
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1082,
                        "mutability": "mutable",
                        "name": "_staker",
                        "nameLocation": "4527:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1111,
                        "src": "4513:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                          "typeString": "struct StakeBSCM.Staker"
                        },
                        "typeName": {
                          "id": 1081,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1080,
                            "name": "Staker",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 783,
                            "src": "4513:6:6"
                          },
                          "referencedDeclaration": 783,
                          "src": "4513:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_storage_ptr",
                            "typeString": "struct StakeBSCM.Staker"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1087,
                    "initialValue": {
                      "baseExpression": {
                        "id": 1083,
                        "name": "stakerInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 790,
                        "src": "4537:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$783_storage_$",
                          "typeString": "mapping(address => struct StakeBSCM.Staker storage ref)"
                        }
                      },
                      "id": 1086,
                      "indexExpression": {
                        "expression": {
                          "id": 1084,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4548:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4548:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4537:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$783_storage",
                        "typeString": "struct StakeBSCM.Staker storage ref"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4513:46:6"
                  },
                  {
                    "expression": {
                      "id": 1091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1088,
                        "name": "stakedBSCMemepad",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "4570:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "expression": {
                          "id": 1089,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1082,
                          "src": "4589:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                            "typeString": "struct StakeBSCM.Staker memory"
                          }
                        },
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 782,
                        "src": "4589:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4570:33:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1092,
                    "nodeType": "ExpressionStatement",
                    "src": "4570:33:6"
                  },
                  {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1093,
                          "name": "_staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1082,
                          "src": "4618:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                            "typeString": "struct StakeBSCM.Staker memory"
                          }
                        },
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stakedAt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 780,
                        "src": "4618:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4637:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4618:20:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1109,
                      "nodeType": "Block",
                      "src": "4717:44:6",
                      "statements": [
                        {
                          "expression": {
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1105,
                              "name": "daysStakedFor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "4732:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 1106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4748:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4732:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1108,
                          "nodeType": "ExpressionStatement",
                          "src": "4732:17:6"
                        }
                      ]
                    },
                    "id": 1110,
                    "nodeType": "IfStatement",
                    "src": "4614:147:6",
                    "trueBody": {
                      "id": 1104,
                      "nodeType": "Block",
                      "src": "4640:71:6",
                      "statements": [
                        {
                          "expression": {
                            "id": 1102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1097,
                              "name": "daysStakedFor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "4655:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1099,
                                    "name": "_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1082,
                                    "src": "4682:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staker_$783_memory_ptr",
                                      "typeString": "struct StakeBSCM.Staker memory"
                                    }
                                  },
                                  "id": 1100,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stakedAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 780,
                                  "src": "4682:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1098,
                                "name": "stakedDays",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1139,
                                "src": "4671:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view returns (uint256)"
                                }
                              },
                              "id": 1101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4671:28:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4655:44:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1103,
                          "nodeType": "ExpressionStatement",
                          "src": "4655:44:6"
                        }
                      ]
                    }
                  }
                ]
              },
              "documentation": {
                "id": 1073,
                "nodeType": "StructuredDocumentation",
                "src": "4344:62:6",
                "text": " @dev Returns the caller's staking details"
              },
              "functionSelector": "71bb3d01",
              "id": 1112,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "myStakes",
              "nameLocation": "4421:8:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1074,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "4429:2:6"
              },
              "returnParameters": {
                "id": 1079,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1076,
                    "mutability": "mutable",
                    "name": "stakedBSCMemepad",
                    "nameLocation": "4461:16:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1112,
                    "src": "4453:24:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1075,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4453:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 1078,
                    "mutability": "mutable",
                    "name": "daysStakedFor",
                    "nameLocation": "4487:13:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1112,
                    "src": "4479:21:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1077,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4479:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4452:49:6"
              },
              "scope": 1140,
              "src": "4412:356:6",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1121,
                "nodeType": "Block",
                "src": "4897:40:6",
                "statements": [
                  {
                    "expression": {
                      "expression": {
                        "id": 1118,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "4915:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4915:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1117,
                    "id": 1120,
                    "nodeType": "Return",
                    "src": "4908:21:6"
                  }
                ]
              },
              "documentation": {
                "id": 1113,
                "nodeType": "StructuredDocumentation",
                "src": "4776:61:6",
                "text": " @dev Returns the total number of stakers"
              },
              "functionSelector": "86989038",
              "id": 1122,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "totalStakers",
              "nameLocation": "4852:12:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1114,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "4864:2:6"
              },
              "returnParameters": {
                "id": 1117,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1116,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1122,
                    "src": "4888:7:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1115,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4888:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "4887:9:6"
              },
              "scope": 1140,
              "src": "4843:94:6",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            {
              "body": {
                "id": 1138,
                "nodeType": "Block",
                "src": "5105:117:6",
                "statements": [
                  {
                    "expression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1130,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "5178:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5178:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1132,
                              "name": "stakedAt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1125,
                              "src": "5196:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5178:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1134,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5177:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5208:6:6",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      },
                      "src": "5177:37:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1129,
                    "id": 1137,
                    "nodeType": "Return",
                    "src": "5170:44:6"
                  }
                ]
              },
              "documentation": {
                "id": 1123,
                "nodeType": "StructuredDocumentation",
                "src": "4945:84:6",
                "text": " @dev Returns the number of days for which BSCMemepad was staked"
              },
              "id": 1139,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "stakedDays",
              "nameLocation": "5044:10:6",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 1126,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1125,
                    "mutability": "mutable",
                    "name": "stakedAt",
                    "nameLocation": "5063:8:6",
                    "nodeType": "VariableDeclaration",
                    "scope": 1139,
                    "src": "5055:16:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1124,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5055:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5054:18:6"
              },
              "returnParameters": {
                "id": 1129,
                "nodeType": "ParameterList",
                "parameters": [
                  {
                    "constant": false,
                    "id": 1128,
                    "mutability": "mutable",
                    "name": "",
                    "nameLocation": "-1:-1:-1",
                    "nodeType": "VariableDeclaration",
                    "scope": 1139,
                    "src": "5096:7:6",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1127,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5096:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "src": "5095:9:6"
              },
              "scope": 1140,
              "src": "5035:187:6",
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            }
          ],
          "scope": 1141,
          "src": "340:4885:6",
          "usedErrors": []
        }
      ],
      "src": "33:5192:6"
    },
    "compiler": {
      "name": "solc",
      "version": "0.8.10+commit.fc410830.Emscripten.clang"
    },
    "networks": {
      "56": {
        "events": {},
        "links": {},
        "address": "0x9ffFF3B55B307E0B4bedbf5FFBf4Ee1B0e16ced0",
        "transactionHash": "0x42a1776de78cc0e8e572bac459c0f88ea0aa16d7419d91110dee77b0e0fda571"
      },
      "97": {
        "events": {},
        "links": {},
        "address": "0x10c6f81456a5790841F20A90BB472cB1A5e1BF57",
        "transactionHash": "0x6975c3c3f4b4abebc4ff678969353543f0e60f931e47cf4babd69a015c38df6d"
      }
    },
    "schemaVersion": "3.4.3",
    "updatedAt": "2021-11-26T06:50:32.983Z",
    "networkType": "ethereum",
    "devdoc": {
      "kind": "dev",
      "methods": {
        "myStakes()": {
          "details": "Returns the caller's staking details"
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
        },
        "stake(uint256)": {
          "details": "To stake BSCMemepad in the contract Requirements: - amount must be greater than 0 - BSCMemepad balance of Staker must be greater than or equal to amount"
        },
        "totalStakers()": {
          "details": "Returns the total number of stakers"
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        },
        "unStake(uint256)": {
          "details": "To unstake BSCMemepad from the contract Requirements: - Caller's staked BSCMemepad must be greater than 0 - Unstake amount must be less than or equal to the staked BSCMemepad - Contract's BSCMemepad balance must be greater than staked BSCMemepad"
        }
      },
      "title": "StakeBSCM",
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "notice": "The stake BSCM contract for staking and unstaking BSCM",
      "version": 1
    }
  }